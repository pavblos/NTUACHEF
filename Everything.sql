CREATE TABLE IF NOT EXISTS `Images` (
  `Image_ID` int AUTO_INCREMENT,
  `Image_URL` varchar(300) DEFAULT 'http://ikonomoug.com/ntuachef.png',
  `Description` varchar(100),
  PRIMARY KEY(`Image_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

INSERT INTO Images (Image_URL, Description) VALUES 
('http://ikonomoug.com/ntuachef.png', 'pipis 1234 pipiiis (default pipis)');

CREATE TABLE IF NOT EXISTS `Food_Type` (
    `Food_Type_ID` int AUTO_INCREMENT,
    `Name` varchar(40) NOT NULL UNIQUE,
    `Description` varchar(250) NOT NULL,
    `Image_ID` int DEFAULT 1,
    PRIMARY KEY(`Food_Type_ID`),
    FOREIGN KEY (`Image_ID`) REFERENCES `Images`(`Image_ID`) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;


CREATE TABLE IF NOT EXISTS `Equipment` (
  `Equipment_ID` int AUTO_INCREMENT,
  `Name` varchar(25) NOT NULL UNIQUE,
  `Instructions` varchar(150),
  `Image_ID` int DEFAULT 1,
  PRIMARY KEY(`Equipment_ID`),
  FOREIGN KEY (`Image_ID`) REFERENCES `Images`(`Image_ID`) ON DELETE SET NULL
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `Label` (
  `Label_ID` int NOT NULL AUTO_INCREMENT,
  `Label_Name` varchar(20) NOT NULL UNIQUE,
  PRIMARY KEY (`Label_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `Meal` (
  `Meal_ID` int AUTO_INCREMENT,
  `Type` varchar(50) NOT NULL UNIQUE,
  `Image_ID` int DEFAULT 1,
  PRIMARY KEY(`Meal_ID`),
  FOREIGN KEY (`Image_ID`) REFERENCES `Images`(`Image_ID`) ON DELETE SET NULL
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `Cuisine` (
  `Cuisine_ID` int AUTO_INCREMENT,
  `Cuisine_Name` varchar(50) NOT NULL UNIQUE,
  `Image_ID` int DEFAULT 1,
  PRIMARY KEY (`Cuisine_ID`),
  FOREIGN KEY (`Image_ID`) REFERENCES `Images`(`Image_ID`) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `Theme` (
  `Theme_ID` int(10) NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL UNIQUE,
  `Description` varchar(150),
  PRIMARY KEY (`Theme_ID`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `Tips` (
  `Tip_ID` int(50) NOT NULL AUTO_INCREMENT,
  `Description` varchar(150) NOT NULL,
  PRIMARY KEY (`Tip_ID`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;


CREATE TABLE IF NOT EXISTS `Step` (
    `Step_id` int(50) NOT NULL AUTO_INCREMENT,
    `Action` varchar(150) NOT NULL UNIQUE,
    PRIMARY KEY (`Step_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;





CREATE TABLE IF NOT EXISTS `Ingredient` (
  `Ingredient_ID` int AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL UNIQUE,
  `Fats_per_100g` int NOT NULL,
  `Carbs_per_100g` int NOT NULL,
  `Protein_per_100g` int NOT NULL,
  `Calories_per_100g` int NOT NULL,
  `Food_Type_ID` int NOT NULL,
  `Image_ID` int DEFAULT 1,
  PRIMARY KEY (`Ingredient_ID`), 
  FOREIGN KEY (`Food_Type_ID`) REFERENCES `Food_Type`(`Food_Type_ID`) ON DELETE CASCADE,
  FOREIGN KEY (`Image_ID`) REFERENCES `Images`(`Image_ID`) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;


CREATE TABLE IF NOT EXISTS `Recipe` (
  `Recipe_ID` int NOT NULL AUTO_INCREMENT,
  `Name` varchar(50) NOT NULL UNIQUE,
  `Difficulty` tinyint NOT NULL CHECK (`Difficulty` >= 1 AND `Difficulty` <= 5),
  `Description` varchar(150) NOT NULL,
  `Variety` enum('Pastry', 'Culinary') NOT NULL,
  `Diet` varchar(30),

  `Prep_time` int NOT NULL,
  `Cooking_time` int NOT NULL,
  `Total_time` int GENERATED ALWAYS AS (Prep_time + Cooking_time) STORED,

  `Base_Ingredient_ID` int NOT NULL,
  `Cuisine_ID` int NOT NULL,
  `Image_ID` int DEFAULT 1,

  PRIMARY KEY (`Recipe_ID`),
  FOREIGN KEY (`Base_Ingredient_ID`) REFERENCES `Ingredient`(`Ingredient_ID`),
  FOREIGN KEY (`Cuisine_ID`) REFERENCES `Cuisine`(`Cuisine_ID`),
  FOREIGN KEY (`Image_ID`) REFERENCES `Images`(`Image_ID`) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;


CREATE TABLE IF NOT EXISTS `Recipe_Label` (
  `Recipe_ID` int,
  `Label_ID` int,
  PRIMARY KEY (`Recipe_ID`, `Label_ID`),
  FOREIGN KEY (`Recipe_ID`) REFERENCES `Recipe`(`Recipe_ID`),
  FOREIGN KEY (`Label_ID`) REFERENCES `Label`(`Label_ID`)    
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `RecipeMeal` (
  `Recipe_ID` int,
  `Meal_ID` int,
  PRIMARY KEY (`Recipe_ID`, `Meal_ID`),
  FOREIGN KEY (`Recipe_ID`) REFERENCES `Recipe`(`Recipe_ID`),
  FOREIGN KEY (`Meal_ID`) REFERENCES `Meal`(`Meal_ID`)    
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;



CREATE TABLE IF NOT EXISTS `RecipeIngredient` (
  `Recipe_ID` int NOT NULL,
  `Ingredient_ID` int NOT NULL,
  `Quantity_Grams` int,
  `Quantity` varchar(20),
  PRIMARY KEY (`Recipe_ID`, `Ingredient_ID`),
  FOREIGN KEY (`Recipe_ID`) REFERENCES `Recipe`(`Recipe_ID`),
  FOREIGN KEY (`Ingredient_ID`) REFERENCES `Ingredient`(`Ingredient_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `RecipeRequiresEquipment` (
  `Recipe_ID` int NOT NULL,
  `Equipment_ID` int NOT NULL,
  PRIMARY KEY (`Recipe_ID`, `Equipment_ID`),
  FOREIGN KEY (`Recipe_ID`) REFERENCES `Recipe`(`Recipe_ID`),
  FOREIGN KEY (`Equipment_ID`) REFERENCES `Equipment`(`Equipment_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `RecipeTips` (
  `Recipe_ID` int NOT NULL,
  `Tip_ID` int NOT NULL,
  PRIMARY KEY (`Recipe_ID`, `Tip_ID`),
  FOREIGN KEY (`Recipe_ID`) REFERENCES `Recipe`(`Recipe_ID`) ON DELETE CASCADE,
  FOREIGN KEY (`Tip_ID`) REFERENCES `Tips`(`Tip_ID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;



CREATE TABLE IF NOT EXISTS `RecipeIsThemed` (
  `Recipe_ID` int,
  `Theme_ID` int,
  PRIMARY KEY (`Recipe_ID`, `Theme_ID`),
  FOREIGN KEY (`Recipe_ID`) REFERENCES `Recipe`(`Recipe_ID`) ON DELETE CASCADE,
  FOREIGN KEY (`Theme_ID`) REFERENCES `Theme`(`Theme_ID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `RecipeStep` (
  `Recipe_ID` int,
  `Step_ID` int,
  `Step_Number` int NOT NULL,
  PRIMARY KEY (`Recipe_ID`, `Step_ID`),
  UNIQUE (`Recipe_ID`, `Step_Number`),
  FOREIGN KEY (`Recipe_ID`) REFERENCES `Recipe`(`Recipe_ID`) ON DELETE CASCADE,
  FOREIGN KEY (`Step_ID`) REFERENCES `Step`(`Step_ID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE VIEW RecipeNutritionalInfo AS
SELECT 
    r.Recipe_ID,
    r.Name,
    r.Difficulty,
    r.Description,
    r.Diet,
    r.Prep_time,
    r.Cooking_time,
    r.Total_time,
    r.Base_Ingredient_ID,
    r.Cuisine_ID,
    r.Image_ID,
    SUM(CASE WHEN ri.Quantity_Grams IS NOT NULL THEN ri.Quantity_Grams * i.Fats_per_100g / 100 ELSE 0 END) AS Fats_per_Portion,
    SUM(CASE WHEN ri.Quantity_Grams IS NOT NULL THEN ri.Quantity_Grams * i.Carbs_per_100g / 100 ELSE 0 END) AS Carbs_per_Portion,
    SUM(CASE WHEN ri.Quantity_Grams IS NOT NULL THEN ri.Quantity_Grams * i.Protein_per_100g / 100 ELSE 0 END) AS Protein_per_Portion,
    SUM(CASE WHEN ri.Quantity_Grams IS NOT NULL THEN ri.Quantity_Grams * i.Calories_per_100g / 100 ELSE 0 END) AS Calories_per_Portion
FROM 
    Recipe r
JOIN 
    RecipeIngredient ri ON r.Recipe_ID = ri.Recipe_ID
JOIN 
    Ingredient i ON ri.Ingredient_ID = i.Ingredient_ID
GROUP BY 
    r.Recipe_ID,
    r.Name,
    r.Difficulty,
    r.Description,
    r.Diet,
    r.Prep_time,
    r.Cooking_time,
    r.Total_time,
    r.Base_Ingredient_ID,
    r.Cuisine_ID,
    r.Image_ID;

DELIMITER //

CREATE TRIGGER `AutoIncrementStepNumber`  -- Ensure that Step Number is sequential (and unique)
BEFORE INSERT ON `RecipeStep`
FOR EACH ROW
BEGIN
    DECLARE max_step_number INT;
    SELECT IFNULL(MAX(`Step_Number`), 0) INTO max_step_number FROM `RecipeStep` WHERE `Recipe_ID` = NEW.`Recipe_ID`;
    SET NEW.`Step_Number` = max_step_number + 1;
END//

DELIMITER //
CREATE TRIGGER `CheckTipsBeforeInsert`
BEFORE INSERT ON `RecipeTips`
FOR EACH ROW
BEGIN
    DECLARE tip_count INT DEFAULT 0;
    SELECT COUNT(*) INTO tip_count FROM `RecipeTips` WHERE `Recipe_ID` = NEW.`Recipe_ID`;
    IF tip_count >= 3 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Cannot add more than 3 tips per recipe';
    END IF;
END//



DELIMITER ;


DELIMITER //

CREATE TRIGGER SetDietBeforeInsertOrUpdate
BEFORE INSERT ON `Recipe`
FOR EACH ROW
BEGIN
  -- Using CASE to set specific diet characterizations
  SET NEW.`Diet` = (
    SELECT CASE ft.`Food_Type_ID`
      WHEN 1 THEN 'Herbal'
      WHEN 2 THEN 'Caffeinated'
      WHEN 3 THEN 'Preserved'
      WHEN 4 THEN 'Sweetened'
      WHEN 5 THEN 'Fatty'
      WHEN 6 THEN 'Dairy'
      WHEN 7 THEN 'Meaty'
      WHEN 8 THEN 'Seafood'
      WHEN 9 THEN 'Grain'
      WHEN 10 THEN 'Plant-based'
      WHEN 11 THEN 'Sweetened'
      WHEN 12 THEN 'Beverages'
    END
    FROM `Ingredient` i
    JOIN `Food_Type` ft ON i.`Food_Type_ID` = ft.`Food_Type_ID`
    WHERE i.`Ingredient_ID` = NEW.`Base_Ingredient_ID`
  );
END//

CREATE TRIGGER SetDietBeforeUpdate
BEFORE UPDATE ON `Recipe`
FOR EACH ROW
BEGIN
  -- Using CASE to set specific diet characterizations
  SET NEW.`Diet` = (
    SELECT CASE ft.`Food_Type_ID`
      WHEN 1 THEN 'Herbal'
      WHEN 2 THEN 'Caffeinated'
      WHEN 3 THEN 'Preserved'
      WHEN 4 THEN 'Sweetened'
      WHEN 5 THEN 'Fatty'
      WHEN 6 THEN 'Dairy'
      WHEN 7 THEN 'Meaty'
      WHEN 8 THEN 'Seafood'
      WHEN 9 THEN 'Grain'
      WHEN 10 THEN 'Plant-based'
      WHEN 11 THEN 'Sweetened'
      WHEN 12 THEN 'Beverages'
    END
    FROM `Ingredient` i
    JOIN `Food_Type` ft ON i.`Food_Type_ID` = ft.`Food_Type_ID`
    WHERE i.`Ingredient_ID` = NEW.`Base_Ingredient_ID`
  );
END;
//

DELIMITER ;


-- Images 13
INSERT INTO Images (Image_URL, Description) VALUES 
('https://www.gannett-cdn.com/-mm-/fa914244af5254218ff03a5d6773eeb3b7df7f39/c=0-100-1920-1180/local/-/media/2017/01/17/PalmSprings/B9325785594Z.1_20170117184248_000_GOOH3U9JO.1-0.jpg?width=2560', 'Generic description'),
('https://imageio.forbes.com/specials-images/imageserve/6393aebacd1e996dc7b13be0/Herbal-tea-and-espresso-coffee/0x0.jpg?format=jpg&crop=1325,993,x81,y0,safe&width=1440', 'Generic description'),
('https://idsb.tmgrup.com.tr/ly/uploads/images/2022/09/04/228797.jpg', 'Generic description'),
('https://www.uhhospitals.org/-/media/Images/Blog/Variety-Sweeteners-1150297854-Blog-MainArticleImage.jpg?h=450&w=720&la=en&hash=0B0C7F5BB8CB198D2004B16F2CB16D202B6A6864', 'Generic description'),
('https://embracingnutrition.co.uk/wp-content/uploads/2020/12/healthy-fats-and-oils-2-scaled.jpg', 'Generic description'),
('https://samsungfood.com/wp-content/uploads/2023/02/shutterstock_1679020255.jpg', 'Generic description'),
('https://healthinfo.healthengine.com.au/assets/Various-fresh-meats.jpg', 'Generic description'),
('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSkQjxBnV7MpWtFj686BQwCnFjYXoYskwJXiBUYcUfOwg&s', 'Generic description'),
('https://aarnagroup.com/wp-content/uploads/2017/01/cereals-and-oilseeds.jpg', 'Generic description'),
('https://www.unlockfood.ca/getattachment/3405ed4c-970c-4ce8-a3dd-071097f9586e/bigstock-Low-cholesterol-vegan-plant-ba-429847295.jpg.aspx', 'Generic description'),
('https://www.foodnavigator.com/var/wrbm_gb_food_pharma/storage/images/_aliases/wrbm_large/publications/food-beverage-nutrition/foodnavigator.com/news/market-trends/do-consumers-prefer-sugar-or-non-nutritive-sweeteners/16996350-1-eng-GB/Do-consumers-prefer-sugar-or-non-nutritive-sweeteners.jpg', 'Generic description'),
('https://media.licdn.com/dms/image/D4D12AQF49K8TKNCPIQ/article-cover_image-shrink_600_2000/0/1704306561568?e=2147483647&v=beta&t=HT8A270FKov1HKGPsa_bd0Vx4SLXZKMVvIwzBbEuBNA', 'Generic description');




-- Food_Type 12
INSERT INTO `Food_Type` (`Name`, `Description`, `Image_ID`) VALUES
('Aromatic Herbs and Essential Oils', 'Aromatic herbs and essential oils used for flavoring and aroma in cooking and aromatherapy.', 2),
('Coffee, Tea, and Their Products', 'Includes coffee beans, tea leaves, and products made from them such as coffee grounds, tea bags, and instant coffee or tea mixes.', 3),
('Preserved Foods', 'Foods that have been processed to extend their shelf life, such as canned fruits and vegetables, pickles, and preserved meats.', 4),
('Sweeteners', 'Substances used to sweeten food and beverages, such as sugar, honey, maple syrup, and artificial sweeteners.', 5),
('Fats and Oils', 'Includes both animal fats (such as butter and lard) and plant-based oils (such as olive oil and coconut oil) used in cooking and baking.', 6),
('Milk, Eggs, and Their Products', 'Includes dairy products like milk, cheese, yogurt, and eggs, which are common ingredients in many recipes.', 7),
('Meat and Meat Products', 'Includes various types of meat (beef, pork, poultry, etc.) as well as processed meat products like sausages, bacon, and deli meats.', 8),
('Fish and Fish Products', 'Includes fresh and frozen fish, seafood, and products made from fish, such as fish fillets, canned tuna, and fish sticks.', 9),
('Cereals and Their Products', 'Includes grains like wheat, rice, oats, and corn, as well as products made from them like bread, pasta, and breakfast cereals.', 10),
('Various Plant-Based Foods', 'Various foods derived from plants, including fruits, vegetables, legumes, nuts, seeds, and plant-based meat substitutes.', 11),
('Products with Sweeteners', 'Products that contain added sweeteners, including candies, chocolates, desserts, and sweet snacks.', 12),
('Various Beverages', 'Includes a wide range of beverages such as water, soft drinks, juices, energy drinks, alcoholic beverages, and hot beverages like tea and coffee.', 13);

-- Equipment 10
INSERT INTO `Equipment` (`Name`, `Instructions`)
VALUES ('Pot', 'Use for boiling, stewing, and cooking soups.'),
       ('Pan', 'Use for frying, sautéing, and searing.'),
       ('Spatula', 'Use for flipping and stirring ingredients in a pan.'),
       ('Mixing Bowl', 'Use for mixing ingredients together.'),
       ('Knife', 'Use for cutting and chopping ingredients.'),
       ('Cutting Board', 'Use as a surface for cutting ingredients.'),
       ('Oven', 'Use for baking and roasting food.'),
       ('Microwave', 'Use for heating and cooking food quickly.'),
       ('Blender', 'Use for blending ingredients into smoothies or sauces.'),
       ('Grill', 'Use for grilling meat, vegetables, and seafood.');

-- Label 10
INSERT INTO `Label` (`Label_Name`)
VALUES ('Brunch'),
       ('Quick Lunch'),
       ('Cold Dish'),
       ('Dessert'),
       ('Vegetarian'),
       ('Gluten-Free'),
       ('Low-Carb'),
       ('Spicy'),
       ('Family-Friendly'),
       ('Vegan');


-- Meal 5
INSERT INTO `Meal` (`Type`)
VALUES ('Breakfast'),
       ('Brunch'),
       ('Lunch'),
       ('Dinner'),
       ('Supper');

-- Cuisine 20

INSERT INTO `Cuisine` (`Cuisine_Name`) VALUES
('Brazilian'),
('Chinese'),
('Cuban'),
('Ethiopian'),
('French'),
('Greek'),
('Indian'),
('Italian'),
('Japanese'),
('Korean'),
('Lebanese'),
('Mexican'),
('Moroccan'),
('Peruvian'),
('Russian'),
('South African'),
('Spanish'),
('Thai'),
('Turkish'),
('Vietnamese');


-- Theme 20
INSERT INTO `Theme` (`Name`, `Description`)
VALUES
('Easter', 'Recipes perfect for celebrating Easter, featuring eggs, lamb, and pastries.'),
('Summer Grilling', 'Outdoor barbecue and grilling recipes for summer cookouts.'),
('Winter Warmers', 'Hearty and warming dishes ideal for cold winter days.'),
('Vegan Delights', 'Delicious plant-based recipes suitable for vegans.'),
('Gluten-Free', 'Tasty options for those avoiding gluten.'),
('Kids Party', 'Fun and colorful recipes that are perfect for childrens parties.'),
('Halloween', 'Spooky and fun recipes for Halloween treats and meals.'),
('Valentines Day', 'Romantic recipes to share with your loved one on Valentines day.'),
('Comfort Food', 'Easy and comforting recipes for a feel-good meal.'),
('Quick Meals', 'Recipes that can be made in under 30 minutes for quick dining.'),
('Low Carb', 'Recipes designed for low carbohydrate diets.'),
('Festive Baking', 'Baking recipes for festive treats and homemade gifts.'),
('Seafood Fest', 'A celebration of seafood from shellfish to filets.'),
('Italian Night', 'All about Italian cuisine from pastas to tiramisu.'),
('Sushi Special', 'Explore the art of making sushi at home.'),
('Farm to Table', 'Emphasizing fresh and local ingredients straight from the farm.'),
('Moroccan Magic', 'Rich spices and vibrant flavors from Moroccan kitchens.'),
('French Pastry', 'Delicate and buttery pastries from the French cuisine.'),
('Tex-Mex Fiesta', 'A blend of Texan and Mexican cuisines for a spicy kick.'),
('Mediterranean Diet', 'Healthy and flavorful dishes from the Mediterranean region.');

-- Tips 10
INSERT INTO `Tips` (`Description`)
VALUES 
('Always read the recipe completely before starting to cook.'),
('Prep all your ingredients before you start cooking.'),
('Keep your knives sharp for safer and easier cutting.'),
('Clean as you go to keep your workspace organized and manageable.'),
('Taste your food as you cook to adjust seasoning.'),
('Use a timer to keep track of cooking durations.'),
('Store spices in a cool, dark place to extend their shelf life.'),
('Let meat rest before cutting to keep it juicy.'),
('Use fresh herbs at the end of cooking to maximize flavor.'),
('Invest in good quality cookware for consistent heat distribution.');

-- Step 70
INSERT INTO `Step` (`Action`)
VALUES 
('Gather all ingredients'),
('Measure 1 cup of flour'),
('Preheat oven to 350°F'),
('Grease the baking pan'),
('Chop the onions finely'),
('Mince two cloves of garlic'),
('Wash and dry fresh produce'),
('Boil 3 cups of water'),
('Simmer the broth on low heat'),
('Marinate the chicken for 2 hours'),
('Grate 100g of cheddar cheese'),
('Whisk three eggs in a bowl'),
('Mix dry and wet ingredients'),
('Knead the dough for 10 minutes'),
('Let the dough rise for 1 hour'),
('Punch down the dough to deflate'),
('Shape the dough into a loaf'),
('Bake in the oven for 30 minutes'),
('Test for doneness with a toothpick'),
('Cool on a wire rack for 15 minutes'),
('Melt butter in a saucepan'),
('Add spices to the hot oil'),
('Fry the spices for 2 minutes'),
('Pour in the tomato sauce'),
('Add salt and pepper to taste'),
('Stir in a cup of cream'),
('Bring to a boil then reduce to simmer'),
('Cook pasta until al dente'),
('Drain pasta and set aside'),
('Slice the beef into thin strips'),
('Heat the pan over medium-high heat'),
('Sauté vegetables for 5 minutes'),
('Add meat to the pan and cook'),
('Mix vegetables and meat together'),
('Sprinkle with fresh herbs before serving'),
('Whip cream until stiff peaks form'),
('Fold cream into the mixture gently'),
('Chill in the refrigerator'),
('Serve chilled with garnish'),
('Prepare ingredients for sauce'),
('Cook sauce over low heat'),
('Adjust the seasoning'),
('Prepare plates for serving'),
('Garnish with lemon slices'),
('Clean the kitchen counters'),
('Store leftovers in airtight containers'),
('Write down the recipe adjustments'),
('Share photos on social media'),
('Plan the menu for next meal'),
('Enjoy your meal!'),
('Zest one lemon for added flavor'),
('Juice the lemon and set aside for dressing'),
('Toast the nuts in a dry pan until fragrant'),
('Crush the garlic cloves with the flat side of a knife'),
('Sear the steak over high heat for a crusty finish'),
('Rest the steak for 10 minutes before slicing'),
('Infuse olive oil with rosemary and garlic for 30 minutes'),
('Layer the lasagna sheets with sauce and cheese'),
('Brew coffee for the dessert ingredient'),
('Caramelize onions over low heat for 20 minutes'),
('Blend the soup until smooth with a hand blender'),
('Chill the dessert in the freezer for faster setting'),
('Dress the salad just before serving to keep it crisp'),
('Toast bread slices lightly before making sandwiches'),
('Grind fresh spices for more impactful flavors'),
('Soak beans overnight in water before cooking'),
('Devein shrimp to prepare for cooking'),
('Marinate tofu for at least one hour in the fridge'),
('Slice baguette diagonally for better presentation'),
('Whisk vinaigrette ingredients until emulsified');

-- Ingredient 100
INSERT INTO `Ingredient` 
  (`Name`, `Fats_per_100g`, `Carbs_per_100g`, `Protein_per_100g`, `Calories_per_100g`, `Food_Type_ID`) 
VALUES
  ('Black Pepper', 3, 38, 11, 255, 1),
  ('Clove Oil', 0, 0, 0, 9, 1),
  ('Instant Coffee', 0, 4, 12, 2, 2),
  ('Matcha', 1, 34, 30, 3, 2),
  ('Smoked Salmon', 8, 0, 18, 117, 3),
  ('Pickled Onions', 0, 5, 1, 20, 3),
  ('Honey', 0, 82, 0, 304, 4),
  ('Agave Syrup', 0, 76, 0, 290, 4),
  ('Margarine', 81, 0, 0, 717, 5),
  ('Flaxseed Oil', 99, 0, 0, 900, 5),
  ('Yogurt', 3, 6, 4, 59, 6),
  ('Powdered Eggs', 48, 2, 45, 600, 6),
  ('Beef Jerky', 25, 3, 33, 410, 7),
  ('Chicken Nuggets', 12, 18, 14, 286, 7),
  ('Anchovies', 5, 0, 29, 210, 8),
  ('Mackerel', 25, 0, 19, 305, 8),
  ('Oats', 7, 66, 17, 389, 9),
  ('Cornmeal', 2, 72, 8, 362, 9),
  ('Spinach', 0, 4, 3, 23, 10),
  ('Broccoli', 0, 7, 3, 34, 10),
  ('Aspartame', 0, 0, 0, 4, 11),
  ('Saccharin', 0, 0, 0, 0, 11),
  ('Apple Juice', 0, 24, 0, 95, 12),
  ('Sports Drink', 0, 6, 0, 24, 12),
  ('Cinnamon Sticks', 1, 81, 4, 247, 1),
  ('Eucalyptus Oil', 0, 0, 0, 9, 1),
  ('Herbal Tea', 0, 0, 0, 1, 2),
  ('White Tea', 0, 0, 0, 1, 2),
  ('Canned Tuna', 1, 0, 12, 116, 3),
  ('Olives', 15, 6, 1, 145, 3),
('Rosemary', 6, 21, 3, 131, 1),
('Basil', 0, 2, 3, 22, 1),
('Coffee Arabica', 0, 4, 1, 40, 2),
('Green Tea', 0, 1, 1, 2, 2),
('Pickled Cucumber', 0, 3, 1, 11, 3),
('Maple Syrup', 0, 67, 0, 260, 4),
('Olive Oil', 100, 0, 0, 884, 5),
('Whole Egg', 11, 1, 13, 155, 6),
('Chicken Breast', 3, 0, 31, 165, 7),
('Salmon Fillet', 13, 0, 25, 208, 8),
('Wheat Flour', 1, 22, 4, 124, 9),
('Almond', 49, 22, 21, 575, 10),
('Diet Coke', 0, 0, 0, 1, 12),
('Sparkling Water', 0, 0, 0, 0, 12),
('Ginger Root', 0, 18, 2, 80, 10),
  ('Mint Leaves', 0, 8, 3, 44, 1),
  ('Vanilla Bean', 0, 4, 0, 12, 1),
  ('Roasted Coffee', 0, 4, 12, 1, 2),
  ('Iced Tea', 0, 7, 0, 28, 2),
  ('Soy Sauce', 0, 5, 8, 53, 3),
  ('Canned Peas', 1, 14, 5, 81, 3),
  ('Fructose', 0, 100, 0, 400, 4),
  ('Molasses', 0, 75, 0, 290, 4),
  ('Peanut Oil', 100, 0, 0, 884, 5),
  ('Canola Oil', 100, 0, 0, 884, 5),
  ('Cream', 30, 4, 2, 292, 6),
  ('Condensed Milk', 9, 10, 8, 135, 6),
  ('Venison', 2, 0, 25, 158, 7),
  ('Duck', 28, 0, 27, 337, 7),
  ('Lobster', 1, 0, 19, 89, 8),
  ('Crab Meat', 1, 0, 18, 82, 8),
  ('Rye', 1, 69, 15, 335, 9),
  ('Buckwheat', 2, 72, 13, 343, 9),
  ('Pumpkin Seeds', 19, 54, 30, 446, 10),
  ('Sunflower Seeds', 51, 20, 21, 584, 10),
  ('Stevia Extract', 0, 0, 0, 0, 11),
  ('Maltitol', 0, 90, 0, 270, 11),
  ('Energy Drink', 0, 27, 0, 110, 12),
  ('Mineral Water', 0, 0, 0, 0, 12),
  ('Tarragon', 7, 50, 23, 295, 1),
  ('Lemon Grass', 0, 25, 2, 99, 1),
  ('Decaf Coffee', 0, 0, 0, 2, 2),
  ('Peppermint Tea', 0, 0, 0, 1, 2),
  ('Jelly', 0, 70, 0, 280, 3),
  ('Canned Corn', 1, 25, 3, 108, 3),
  ('Tagatose', 0, 0, 0, 12, 4),
  ('Polydextrose', 0, 0, 0, 0, 4),
  ('Ghee', 99, 0, 0, 897, 5),
  ('Sunflower Oil', 100, 0, 0, 884, 5),
  ('Goat Milk', 4, 4, 3, 69, 6),
  ('Quail Eggs', 11, 1, 13, 158, 6),
  ('Mutton', 21, 0, 25, 294, 7),
  ('Lamb', 23, 0, 25, 294, 7),
  ('Instant popi', 0, 4, 12, 2, 2),
  ('katsarida', 1, 34, 30, 3, 2),
  ('skouliki', 8, 0, 18, 117, 3),
  ('mpala', 0, 5, 1, 20, 3),
  ('sinefo', 0, 82, 0, 304, 4),
  ('meraki', 0, 76, 0, 290, 4),
  ('agapi', 81, 0, 0, 717, 5),
  ('zoi', 99, 0, 0, 900, 5),
  ('tsitsi', 3, 6, 4, 59, 6),
  ('pipis', 48, 2, 45, 600, 6),
  ('pil', 25, 3, 33, 410, 7),
  ('concerta', 12, 18, 14, 286, 7),
  ('nai', 5, 0, 29, 210, 8),
  ('oxi', 25, 0, 19, 305, 8),
  ('fidi', 7, 66, 17, 389, 9),
  ('oxia', 2, 72, 8, 362, 9),
  ('kalispera', 0, 4, 3, 23, 10);


-- Recipe 50


INSERT INTO `Recipe` 
(`Name`, `Difficulty`, `Description`, `Prep_time`, `Cooking_time`, `Base_Ingredient_ID`, `Cuisine_ID`, `Variety`)
VALUES
('Classic Pancakes', 1, 'Easy fluffy pancakes perfect for breakfast.', 5, 15, 1, 10, 'Culinary'),
('Hearty Lentil Soup', 2, 'A nutritious lentil soup ideal for cold weather.', 10, 40, 2, 2, 'Culinary'),
('Quick Garlic Shrimp', 2, 'Garlic shrimp made quick and easy.', 10, 10, 3, 3, 'Culinary' ),
('Vegetarian Lasagna', 3, 'Layered lasagna with vegetables and cheese.', 20, 60, 4, 4, 'Culinary' ),
('Spicy Beef Chili', 3, 'Rich and spicy beef chili.', 15, 95, 5, 5, 'Culinary'),
('Mushroom Risotto', 4, 'Creamy risotto with earthy mushrooms.', 10, 45, 6, 6, 'Culinary'),
('Thai Green Curry', 3, 'Fragrant and spicy Thai green curry with chicken.', 15, 20, 7, 5, 'Culinary'),
('Baked Cod with Lemon', 2, 'Simple baked cod with a lemon butter sauce.', 5, 25, 8, 8, 'Culinary' ),
('Moroccan Tagine', 4, 'Slow-cooked lamb tagine with dried apricots.', 20, 120, 9, 9, 'Culinary' ),
('Maple Glazed Salmon', 2, 'Salmon with a sweet maple syrup glaze.', 5, 20, 10, 10, 'Culinary' ),
('Pork Carnitas Tacos', 3, 'Mexican slow-cooked pulled pork tacos.', 25, 180, 11, 11, 'Culinary' ),
('Indian Butter Chicken', 3, 'Creamy and rich butter chicken.', 15, 30, 12, 12, 'Culinary' ),
('Korean Bibimbap', 4, 'Rice bowl with assorted vegetables and beef.', 30, 20, 13, 13, 'Culinary' ),
('French Onion Soup', 2, 'Classic soup with caramelized onions and cheese.', 10, 70, 14, 14, 'Culinary' ),
('Italian Meatballs', 2, 'Juicy meatballs in a rich tomato sauce.', 20, 30, 15, 15, 'Culinary' ),
('Chocolate Mousse', 4, 'Light and airy chocolate mousse.', 20, 0, 16, 16, 'Culinary' ),
('Greek Moussaka', 4, 'Baked casserole with eggplant and béchamel sauce.', 30, 90, 17, 17, 'Culinary' ),
('Caesar Salad', 1, 'Crisp lettuce with creamy Caesar dressing.', 10, 0, 18, 18, 'Culinary' ),
('Spanish Paella', 4, 'Authentic seafood paella.', 15, 40, 19, 19, 'Culinary' ),
('Banana Bread', 1, 'Moist bread with ripe bananas and nuts.', 15, 55, 20, 20, 'Culinary' ),
('Caramel Cheesecake', 3, 'A smooth cheesecake with a thick caramel topping.', 25, 50, 1, 1, 'Culinary' ),
('Beef Bourguignon', 4, 'French stew made with beef braised in red wine.', 30, 180, 2, 2, 'Pastry'),
('Chicken Parmesan', 2, 'Breaded chicken breasts topped with cheese and marinara.', 15, 30, 3, 3, 'Culinary' ),
('Vegetable Stir Fry', 1, 'Quick and colorful vegetable stir fry.', 10, 10, 4, 4, 'Culinary' ),
('Clam Chowder', 3, 'Creamy New England style clam chowder.', 20, 45, 5, 5, 'Pastry'),
('Lemon Meringue Pie', 4, 'Tart lemon filling with a fluffy meringue topping.', 30, 25, 6, 6, 'Pastry'),
('Chicken Tikka Masala', 3, 'Chunks of grilled chicken in a creamy spiced tomato sauce.', 15, 25, 7, 7, 'Pastry'),
('Fettuccine Alfredo', 2, 'Pasta tossed with cheese and butter.', 5, 15, 8, 8, 'Pastry'),
('Jambalaya', 3, 'Louisiana dish with rice, meat, and vegetables.', 25, 60, 9, 9, 'Pastry'),
('Gazpacho', 1, 'Chilled Spanish tomato soup.', 15, 0, 10, 10, 'Pastry'),
('Bangers and Mash', 2, 'Sausages served over mashed potatoes with onion gravy.', 20, 35, 11, 11, 'Pastry'),
('Caprese Salad', 1, 'Simple Italian salad with tomatoes, mozzarella, and basil.', 10, 0, 12, 12, 'Pastry'),
('Pad See Ew', 2, 'Thai stir fried noodles with soy sauce and broccoli.', 10, 15, 13, 13, 'Pastry'),
('Fish and Chips', 2, 'Battered and fried fish served with fries.', 15, 25, 14, 14, 'Pastry'),
('Ratatouille', 3, 'Stewed vegetables dish from southern France.', 20, 40, 15, 15, 'Pastry'),
('Potato Soup', 2, 'Creamy potato soup with bacon and chives.', 10, 30, 16, 16, 'Pastry'),
('Mushroom Stroganoff', 3, 'Creamy Russian mushroom and pasta dish.', 10, 20, 17, 17, 'Pastry'),
('Eggplant Parmesan', 4, 'Baked dish with eggplant, marinara, and cheeses.', 25, 60, 18, 18, 'Pastry'),
('Teriyaki Chicken', 2, 'Chicken coated in a sweet and savory teriyaki sauce.', 10, 20, 19, 19, 'Pastry'),
('Pulled Pork Sandwich', 2, 'Slow-cooked pork shoulder with BBQ sauce on a bun.', 30, 240, 20, 20, 'Pastry'),
('Miso Soup', 1, 'Traditional Japanese soup with tofu and seaweed.', 5, 15, 21, 1, 'Pastry'),
('Baklava', 4, 'Sweet dessert pastry made of layers of filo and chopped nuts.', 30, 50, 22, 2, 'Pastry'),
('Spinach Quiche', 3, 'Egg pie with spinach and cheese in a pastry crust.', 20, 45, 23, 3, 'Pastry'),
('Roast Turkey', 4, 'Herb buttered turkey roasted to perfection.', 30, 180, 24, 4, 'Pastry'),
('Walnut Banana Bread', 2, 'Moist banana bread with crunchy walnuts, perfect for a sweet breakfast.', 15, 60, 51, 5, 'Pastry'),
('Zucchini Noodles', 1, 'Fresh zucchini spirals sautéed with garlic and olive oil.', 10, 10, 52, 3, 'Pastry'),
('Pumpkin Soup', 2, 'Creamy pumpkin soup with a hint of nutmeg and cream.', 20, 30, 53, 4, 'Pastry'),
('Mavroudis', 1, 'Warm apple cider with cinnamon, nutmeg, and clove spices.', 5, 15, 54, 12, 'Pastry'),
('Matia Maura', 2, 'A twist on the classic Caesar with crispy kale, parmesan, and croutons.', 10, 0, 55, 1,'Pastry'),
('Pontiki Fournou', 3, 'Sweet pontiki served over sticky pontiki, drizzled with pontiki milk.', 10, 30, 56, 2,'Pastry');

-- RecipeLabel 121
INSERT INTO `Recipe_Label` (`Recipe_ID`, `Label_ID`)
VALUES
(1, 3), (1, 2), (1, 4), (2, 5), (3, 6), (4, 1), (7, 3), (8, 3), (8, 7), (9, 7), (11, 3), (11, 1), (11, 4), (12, 4), (12, 7), (12, 6), (13, 4), (13, 2), (13, 5), (13, 7), (14, 3), (14, 5), (14, 2), (14, 7), (15, 2), (15, 5), (15, 3), (15, 1), (15, 4), (16, 6), (16, 4), (16, 3), (16, 7), (17, 5), (18, 7), (18, 3), (18, 5), (18, 2), (19, 4), (19, 2), (19, 5), (20, 7), (20, 6), (20, 4), (20, 2), (21, 7), (21, 2), (21, 1), (21, 3), (22, 6), (22, 1), (23, 1), (23, 5), (23, 4), (24, 2), (24, 7), (24, 6), (24, 3), (25, 7), (25, 5), (25, 3), (26, 5), (26, 6), (26, 4), (26, 3), (26, 7), (28, 7), (28, 2), (28, 4), (28, 6), (28, 3), (29, 3), (29, 1), (29, 5), (30, 3), (30, 2), (31, 4), (31, 7), (31, 2), (31, 3), (31, 1), (32, 1), (33, 3), (33, 4), (33, 5), (34, 6), (34, 4), (34, 3), (35, 5), (35, 1), (35, 3), (35, 7), (35, 6), (36, 2), (36, 7), (37, 7), (37, 6), (38, 5), (39, 1), (39, 6), (40, 6), (40, 1), (40, 2), (41, 1), (41, 6), (42, 4), (42, 1), (42, 7), (42, 3), (44, 5), (44, 1), (44, 2), (46, 4), (46, 3), (46, 1), (46, 5), (48, 7), (49, 6), (49, 3), (49, 5), (50, 1);

-- RecipeMeal 100

INSERT INTO `RecipeMeal` (`Recipe_ID`, `Meal_ID`) VALUES
 (1, 1),  (1, 3),  (2, 2),  (2, 1),  (3, 5),  (3, 4),  (4, 2),  (4, 3),  (5, 3),  (5, 2),  (6, 1),  (6, 4),  (7, 2),  (7, 5),  (8, 2),  (8, 5),  (9, 3),  (9, 2),  (10, 4),  (10, 2),  (11, 5),  (11, 4),  (12, 2),  (12, 4),  (13, 1),  (13, 4),  (14, 1),  (14, 4),  (15, 1),  (15, 3),  (16, 4),  (16, 1),  (17, 3),  (17, 2),  (18, 3),  (18, 5),  (19, 3),  (19, 5),  (20, 4),  (20, 3),  (21, 3),  (21, 5),  (22, 1),  (22, 3),  (23, 2),  (23, 3),  (24, 5),  (24, 2),  (25, 2),  (25, 3),  (26, 2),  (26, 3),  (27, 4),  (27, 1),  (28, 5),  (28, 3),  (29, 5),  (29, 2),  (30, 4),  (30, 5),  (31, 2),  (31, 3),  (32, 2),  (32, 4),  (33, 1),  (33, 4),  (34, 1),  (34, 2),  (35, 5),  (35, 2),  (36, 4),  (36, 3),  (37, 3),  (37, 2),  (38, 1),  (38, 3),  (39, 2),  (39, 3),  (40, 4),  (40, 1),  (41, 4),  (41, 5),  (42, 2),  (42, 1),  (43, 4),  (43, 2),  (44, 2),  (44, 4),  (45, 1),  (45, 2),  (46, 1),  (46, 4),  (47, 3),  (47, 2),  (48, 5),  (48, 4),  (49, 1),  (49, 5),  (50, 1),  (50, 2);

-- RecipeIngredient 351
INSERT INTO RecipeIngredient (Recipe_ID, Ingredient_ID, Quantity_Grams, Quantity) 
VALUES
(1, 22, 160, NULL),
(1, 75, 495, NULL),
(1, 7, 96, NULL),
(1, 31, 361, NULL),
(1, 42, 58, NULL),
(1, 63, 471, NULL),
(1, 23, 148, NULL),
(1, 80, NULL, 'a little'),
(1, 48, 118, NULL),
(2, 73, 238, NULL),
(2, 8, 484, NULL),
(2, 63, 181, NULL),
(2, 89, 470, NULL),
(2, 81, 270, NULL),
(2, 96, 448, NULL),
(2, 91, 274, NULL),
(2, 55, 234, NULL),
(3, 96, NULL, 'some'),
(3, 30, NULL, 'some'),
(3, 80, 306, NULL),
(3, 59, 343, NULL),
(3, 94, NULL, 'full sotita'),
(3, 73, 240, NULL),
(3, 40, 267, NULL),
(3, 70, 61, NULL),
(4, 7, 105, NULL),
(4, 68, 112, NULL),
(4, 46, 213, NULL),
(4, 79, 258, NULL),
(4, 16, 115, NULL),
(5, 4, 104, NULL),
(5, 53, 86, NULL),
(5, 35, 278, NULL),
(5, 1, 370, NULL),
(5, 83, 231, NULL),
(5, 94, 57, NULL),
(5, 87, 298, NULL),
(5, 34, 192, NULL),
(6, 32, 296, NULL),
(6, 19, 141, NULL),
(6, 56, 95, NULL),
(6, 49, 318, NULL),
(6, 65, 220, NULL),
(6, 98, 192, NULL),
(6, 9, 101, NULL),
(6, 87, 391, NULL),
(6, 75, 141, NULL),
(7, 80, 475, NULL),
(7, 14, 431, NULL),
(7, 68, 338, NULL),
(7, 1, 60, NULL),
(7, 87, 256, NULL),
(8, 88, 180, NULL),
(8, 6, 171, NULL),
(8, 86, 202, NULL),
(8, 93, 344, NULL),
(8, 7, 325, NULL),
(8, 83, 81, NULL),
(9, 100, 260, NULL),
(9, 7, 438, NULL),
(9, 51, NULL, 'a little'),
(9, 24, 447, NULL),
(9, 15, 183, NULL),
(9, 48, 456, NULL),
(9, 31, 244, NULL),
(10, 44, 186, NULL),
(10, 43, NULL, 'a drop'),
(10, 54, 365, NULL),
(10, 60, 197, NULL),
(10, 97, 178, NULL),
(10, 41, 484, NULL),
(10, 62, 268, NULL),
(10, 92, 262, NULL),
(10, 17, 472, NULL),
(10, 24, 142, NULL),
(11, 83, 265, NULL),
(11, 58, 321, NULL),
(11, 95, 380, NULL),
(11, 32, 487, NULL),
(11, 35, 147, NULL),
(12, 16, NULL, 'tigka'),
(12, 97, 204, NULL),
(12, 88, 465, NULL),
(12, 93, 312, NULL),
(12, 6, 476, NULL),
(12, 64, 85, NULL),
(13, 12, 132, NULL),
(13, 51, 473, NULL),
(13, 25, 396, NULL),
(13, 11, 158, NULL),
(13, 52, 436, NULL),
(13, 50, NULL, 'full sotita'),
(13, 89, 300, NULL),
(13, 9, 383, NULL),
(13, 8, 258, NULL),
(13, 29, 479, NULL),
(14, 21, 99, NULL),
(14, 71, 123, NULL),
(14, 56, 402, NULL),
(14, 11, 393, NULL),
(14, 27, 68, NULL),
(14, 89, 194, NULL),
(14, 5, 387, NULL),
(14, 81, 340, NULL),
(14, 44, 76, NULL),
(15, 20, NULL, 'some'),
(15, 94, 86, NULL),
(15, 60, 347, NULL),
(15, 21, NULL, 'tigka'),
(15, 33, 259, NULL),
(15, 88, 311, NULL),
(15, 77, 250, NULL),
(15, 31, 73, NULL),
(16, 89, 193, NULL),
(16, 14, 466, NULL),
(16, 48, 304, NULL),
(16, 36, 347, NULL),
(16, 9, 497, NULL),
(16, 92, 455, NULL),
(16, 63, NULL, 'tigka'),
(17, 6, 301, NULL),
(17, 60, 220, NULL),
(17, 52, 209, NULL),
(17, 29, 152, NULL),
(17, 1, 370, NULL),
(17, 44, 183, NULL),
(18, 80, NULL, 'a drop'),
(18, 79, 181, NULL),
(18, 28, 164, NULL),
(18, 17, NULL, 'tigka'),
(18, 15, 303, NULL),
(18, 40, 472, NULL),
(18, 26, 140, NULL),
(18, 51, 232, NULL),
(18, 41, 141, NULL),
(19, 13, 486, NULL),
(19, 39, 332, NULL),
(19, 99, 174, NULL),
(19, 6, 241, NULL),
(19, 92, 379, NULL),
(20, 83, 239, NULL),
(20, 59, 485, NULL),
(20, 70, 328, NULL),
(20, 7, 361, NULL),
(20, 5, 376, NULL),
(20, 11, 339, NULL),
(20, 92, NULL, 'a drop'),
(21, 10, 223, NULL),
(21, 70, 214, NULL),
(21, 73, 487, NULL),
(21, 48, 73, NULL),
(21, 74, 81, NULL),
(22, 42, 437, NULL),
(22, 33, 157, NULL),
(22, 5, 131, NULL),
(22, 54, 255, NULL),
(22, 97, 380, NULL),
(22, 53, 364, NULL),
(23, 88, 153, NULL),
(23, 46, 281, NULL),
(23, 73, 262, NULL),
(23, 42, 223, NULL),
(23, 55, 391, NULL),
(23, 45, 424, NULL),
(23, 31, 187, NULL),
(24, 65, 334, NULL),
(24, 68, 269, NULL),
(24, 78, 403, NULL),
(24, 90, 189, NULL),
(24, 87, 111, NULL),
(24, 99, 148, NULL),
(24, 44, 66, NULL),
(24, 12, 416, NULL),
(24, 36, 461, NULL),
(24, 4, 200, NULL),
(25, 23, 197, NULL),
(25, 49, 298, NULL),
(25, 2, 478, NULL),
(25, 54, 62, NULL),
(25, 13, NULL, 'tigka'),
(25, 94, 296, NULL),
(25, 93, 235, NULL),
(26, 5, 379, NULL),
(26, 11, 205, NULL),
(26, 30, 249, NULL),
(26, 96, 226, NULL),
(26, 21, 65, NULL),
(27, 69, 318, NULL),
(27, 33, 196, NULL),
(27, 8, 402, NULL),
(27, 29, 254, NULL),
(27, 4, 282, NULL),
(28, 53, NULL, 'a drop'),
(28, 59, 118, NULL),
(28, 92, 359, NULL),
(28, 66, 427, NULL),
(28, 30, 211, NULL),
(28, 97, 102, NULL),
(28, 27, 382, NULL),
(28, 61, 61, NULL),
(29, 59, 480, NULL),
(29, 83, 92, NULL),
(29, 56, 467, NULL),
(29, 68, 144, NULL),
(29, 8, 359, NULL),
(29, 32, 198, NULL),
(29, 21, 226, NULL),
(29, 97, 326, NULL),
(29, 30, 303, NULL),
(29, 89, 474, NULL),
(30, 24, NULL, 'tigka'),
(30, 65, 445, NULL),
(30, 93, 114, NULL),
(30, 80, 361, NULL),
(30, 50, 250, NULL),
(30, 14, 382, NULL),
(30, 94, 79, NULL),
(30, 54, 158, NULL),
(30, 58, 80, NULL),
(31, 43, NULL, 'some'),
(31, 99, NULL, 'some'),
(31, 49, 67, NULL),
(31, 27, 235, NULL),
(31, 76, 59, NULL),
(31, 25, 230, NULL),
(32, 59, 118, NULL),
(32, 95, 374, NULL),
(32, 4, 196, NULL),
(32, 22, 440, NULL),
(32, 8, NULL, 'tigka'),
(32, 1, 238, NULL),
(33, 54, NULL, 'some'),
(33, 15, 472, NULL),
(33, 57, 113, NULL),
(33, 64, 137, NULL),
(33, 92, 317, NULL),
(33, 88, 163, NULL),
(33, 77, 298, NULL),
(34, 54, 328, NULL),
(34, 10, 357, NULL),
(34, 63, NULL, 'tigka'),
(34, 17, 318, NULL),
(34, 12, 487, NULL),
(34, 31, 217, NULL),
(34, 58, 373, NULL),
(34, 27, 114, NULL),
(34, 48, 463, NULL),
(35, 55, 65, NULL),
(35, 78, 394, NULL),
(35, 92, 117, NULL),
(35, 1, 254, NULL),
(35, 53, 208, NULL),
(35, 56, 407, NULL),
(35, 9, 367, NULL),
(35, 41, 240, NULL),
(36, 24, 307, NULL),
(36, 78, NULL, 'full sotita'),
(36, 37, NULL, 'a drop'),
(36, 82, 168, NULL),
(36, 48, 72, NULL),
(36, 66, NULL, 'some'),
(37, 68, 424, NULL),
(37, 65, 243, NULL),
(37, 58, 482, NULL),
(37, 9, 146, NULL),
(37, 16, 245, NULL),
(37, 20, NULL, 'full sotita'),
(37, 48, 57, NULL),
(37, 52, 366, NULL),
(37, 91, 132, NULL),
(37, 27, 439, NULL),
(38, 4, 365, NULL),
(38, 15, 474, NULL),
(38, 55, 430, NULL),
(38, 77, 499, NULL),
(38, 20, 339, NULL),
(38, 68, NULL, 'some'),
(38, 11, NULL, 'a little'),
(38, 30, 106, NULL),
(39, 38, 387, NULL),
(39, 22, 82, NULL),
(39, 17, 192, NULL),
(39, 52, 311, NULL),
(39, 42, 97, NULL),
(39, 59, 407, NULL),
(39, 58, NULL, 'full sotita'),
(39, 31, 351, NULL),
(40, 30, 313, NULL),
(40, 4, 128, NULL),
(40, 73, 258, NULL),
(40, 36, 73, NULL),
(40, 28, 413, NULL),
(40, 99, 466, NULL),
(40, 46, 407, NULL),
(40, 2, 496, NULL),
(40, 20, 99, NULL),
(41, 12, 371, NULL),
(41, 59, 263, NULL),
(41, 18, 341, NULL),
(41, 45, 174, NULL),
(41, 64, 422, NULL),
(41, 6, 384, NULL),
(42, 77, 352, NULL),
(42, 85, 83, NULL),
(42, 24, 257, NULL),
(42, 27, 194, NULL),
(42, 94, 370, NULL),
(42, 17, 196, NULL),
(42, 67, 81, NULL),
(43, 37, 261, NULL),
(43, 14, 354, NULL),
(43, 87, 324, NULL),
(43, 25, 74, NULL),
(43, 32, NULL, 'some'),
(44, 88, 163, NULL),
(44, 31, 74, NULL),
(44, 6, 196, NULL),
(44, 47, 193, NULL),
(44, 87, 374, NULL),
(45, 2, 409, NULL),
(45, 21, 107, NULL),
(45, 14, 265, NULL),
(45, 41, NULL, 'tigka'),
(45, 88, 432, NULL),
(45, 74, 176, NULL),
(46, 16, 278, NULL),
(46, 50, 427, NULL),
(46, 49, 412, NULL),
(46, 51, 242, NULL),
(46, 7, 383, NULL),
(47, 33, NULL, 'a little'),
(47, 13, NULL, 'full sotita'),
(47, 42, 65, NULL),
(47, 49, 50, NULL),
(47, 58, 256, NULL),
(47, 92, 389, NULL),
(48, 19, 106, NULL),
(48, 66, 412, NULL),
(48, 53, 400, NULL),
(48, 20, 468, NULL),
(49, 79, 213, NULL),
(49, 49, 279, NULL),
(49, 96, 212, NULL),
(49, 75, NULL, 'a little'),
(49, 63, 268, NULL),
(49, 46, 376, NULL),
(50, 4, 402, NULL),
(50, 15, NULL, 'a drop'),
(50, 32, 211, NULL),
(50, 96, 314, NULL),
(50, 70, 420, NULL);

-- RecipeRequiresEquipment 166 
INSERT INTO `RecipeRequiresEquipment` (`Recipe_ID`, `Equipment_ID`) VALUES
(1, 1), (1, 3), (1, 6), (1, 8), (1, 2), (1, 5), (2, 2), (2, 3), (3, 7), (3, 10), (3, 9), (4, 1), (4, 4), (4, 7), (4, 10), (4, 9), (5, 5), (5, 7), (6, 1), (6, 9), (6, 3), (6, 7), (6, 6), (6, 5), (7, 2), (7, 10), (8, 7), (8, 6), (8, 3), (8, 9), (8, 8), (9, 9), (9, 8), (9, 2), (9, 3), (10, 1), (10, 2), (11, 5), (11, 4), (12, 2), (12, 9), (12, 7), (12, 8), (12, 3), (12, 5), (13, 1), (14, 5), (15, 4), (15, 10), (15, 3), (16, 8), (16, 7), (16, 10), (16, 5), (16, 2), (16, 3), (17, 6), (17, 5), (17, 4), (17, 9), (18, 3), (18, 6), (19, 6), (19, 9), (19, 5), (19, 3), (19, 8), (19, 4), (20, 4), (21, 8), (22, 9), (23, 1), (23, 10), (23, 2), (23, 5), (24, 9), (24, 5), (24, 3), (24, 7), (25, 6), (26, 3), (26, 4), (26, 10), (27, 5), (27, 1), (27, 8), (27, 6), (27, 3), (28, 5), (29, 2), (29, 5), (29, 1), (29, 10), (29, 4), (29, 9), (30, 1), (30, 3), (30, 8), (30, 5), (31, 5), (31, 8), (31, 6), (31, 10), (31, 7), (31, 2), (32, 1), (32, 4), (32, 8), (32, 10), (32, 7), (32, 9), (33, 10), (34, 8), (35, 9), (35, 4), (36, 5), (36, 10), (36, 7), (37, 7), (38, 10), (39, 3), (40, 1), (40, 6), (40, 9), (40, 3), (41, 2), (41, 10), (41, 9), (41, 1), (42, 2), (42, 5), (42, 9), (42, 10), (42, 7), (42, 1), (43, 3), (43, 1), (43, 9), (43, 4), (43, 5), (44, 6), (44, 10), (45, 2), (46, 5), (46, 4), (46, 6), (46, 9), (46, 1), (47, 5), (47, 7), (48, 6), (48, 9), (48, 8), (48, 7), (48, 2), (49, 6), (49, 8), (49, 7), (49, 9), (49, 4), (50, 10), (50, 7), (50, 9), (50, 6), (50, 1), (50, 8);

-- RecipeTips 98

INSERT INTO `RecipeTips` (`Recipe_ID`,`Tip_ID`) VALUES
(1, 4), (1, 8), (2, 4), (2, 7), (3, 5), (4, 6), (4, 1), (5, 7), (5, 9), (5, 2), (6, 3), (6, 7), (7, 4), (8, 4), (8, 10), (9, 2), (9, 1), (9, 8), (10, 5), (10, 4), (11, 5), (12, 7), (13, 6), (13, 1), (14, 7), (14, 10), (15, 4), (16, 6), (16, 3), (17, 3), (17, 8), (17, 5), (18, 10), (18, 2), (18, 9), (19, 2), (20, 7), (20, 10), (20, 5), (21, 2), (21, 4), (22, 8), (22, 4), (23, 7), (23, 4), (23, 3), (24, 2), (25, 7), (25, 9), (25, 10), (26, 7), (26, 10), (26, 1), (27, 8), (27, 4), (28, 9), (28, 4), (29, 1), (30, 10), (30, 7), (30, 6), (31, 7), (31, 3), (31, 9), (32, 7), (33, 3), (33, 2), (34, 8), (34, 6), (34, 9), (35, 5), (35, 10), (36, 7), (37, 9), (37, 7), (38, 4), (39, 3), (39, 9), (40, 3), (40, 5), (40, 6), (41, 9), (42, 2), (42, 10), (43, 6), (43, 4), (44, 2), (45, 4), (45, 5), (45, 7), (46, 3), (47, 3), (47, 2), (48, 10), (49, 4), (50, 2), (50, 4), (50, 8);

-- RecipeIsThemed 97 
INSERT INTO `RecipeIsThemed` (`Recipe_ID`, `Theme_ID`) VALUES
(1, 7), (1, 18), (2, 14), (3, 16), (3, 5), (3, 19), (4, 16), (4, 1), (5, 7), (5, 17), (5, 20), (6, 11), (7, 20), (8, 7), (9, 4), (9, 19), (9, 17), (10, 15), (10, 10), (11, 4), (11, 8), (11, 16), (12, 7), (12, 10), (12, 16), (13, 14), (13, 7), (14, 16), (15, 3), (16, 8), (16, 12), (17, 11), (18, 5), (18, 2), (19, 3), (20, 5), (20, 9), (20, 7), (21, 6), (22, 6), (22, 18), (22, 19), (23, 5), (24, 7), (25, 6), (25, 17), (25, 18), (26, 13), (27, 11), (28, 19), (28, 12), (29, 16), (29, 8), (29, 7), (30, 6), (30, 7), (30, 1), (31, 6), (32, 8), (32, 16), (33, 3), (33, 12), (34, 14), (34, 5), (34, 19), (35, 17), (36, 6), (37, 2), (37, 20), (38, 5), (38, 17), (38, 3), (39, 14), (39, 19), (40, 1), (40, 20), (40, 12), (41, 10), (41, 9), (41, 7), (42, 6), (42, 12), (43, 16), (43, 13), (43, 20), (44, 20), (44, 17), (44, 18), (45, 18), (46, 17), (46, 16), (47, 13), (47, 12), (48, 7), (49, 3), (49, 10), (50, 1);

-- RecipeStep 276
INSERT INTO `RecipeStep` (`Recipe_ID`, `Step_ID`) VALUES
(1, 35), (1, 2), (1, 38), (1, 46), (1, 47), (1, 29), (1, 13), (1, 48), (2, 20), (3, 69), (3, 26), (3, 68), (3, 28), (3, 27), (4, 50), (5, 46), (6, 29), (6, 25), (6, 31), (6, 4), (6, 48), (7, 4), (8, 57), (8, 5), (8, 42), (9, 65), (9, 40), (9, 63), (9, 32), (9, 58), (9, 55), (9, 70), (9, 7), (9, 21), (9, 24), (10, 30), (10, 64), (11, 27), (11, 19), (11, 23), (11, 65), (11, 52), (11, 57), (11, 37), (11, 47), (11, 16), (12, 51), (12, 63), (12, 18), (12, 55), (12, 41), (12, 31), (12, 64), (12, 28), (13, 64), (13, 4), (13, 14), (14, 61), (14, 31), (14, 10), (14, 21), (14, 52), (14, 70), (14, 12), (15, 68), (15, 8), (16, 49), (16, 59), (16, 3), (16, 68), (16, 29), (16, 27), (16, 34), (16, 42), (16, 10), (17, 20), (17, 41), (17, 12), (17, 14), (18, 58), (18, 46), (18, 28), (18, 67), (18, 15), (18, 2), (19, 30), (19, 41), (19, 22), (19, 16), (19, 36), (19, 64), (20, 33), (20, 58), (20, 63), (21, 61), (21, 12), (22, 57), (22, 48), (22, 25), (23, 41), (23, 12), (23, 43), (23, 10), (23, 61), (23, 19), (24, 61), (24, 6), (24, 27), (24, 22), (24, 49), (25, 48), (25, 46), (25, 37), (25, 47), (25, 39), (25, 69), (25, 53), (25, 40), (25, 55), (25, 13), (26, 60), (26, 59), (26, 38), (26, 3), (26, 24), (27, 20), (27, 13), (27, 60), (28, 14), (28, 47), (28, 66), (28, 8), (28, 20), (28, 69), (28, 63), (28, 9), (28, 35), (29, 34), (29, 52), (29, 17), (29, 5), (29, 4), (29, 2), (29, 31), (29, 63), (29, 36), (29, 22), (30, 6), (30, 57), (30, 23), (30, 36), (30, 10), (30, 41), (30, 26), (31, 33), (31, 45), (31, 41), (31, 53), (31, 44), (31, 8), (31, 34), (31, 14), (32, 41), (32, 50), (32, 2), (32, 48), (32, 26), (32, 8), (33, 42), (33, 48), (33, 20), (33, 29), (34, 32), (34, 45), (34, 37), (34, 36), (34, 27), (34, 56), (35, 38), (35, 59), (35, 58), (35, 42), (35, 22), (35, 50), (35, 37), (35, 69), (36, 13), (37, 45), (37, 50), (37, 6), (37, 46), (37, 48), (37, 33), (38, 17), (38, 44), (38, 19), (38, 41), (38, 22), (38, 33), (38, 59), (38, 32), (38, 67), (39, 25), (39, 44), (40, 10), (40, 20), (40, 34), (41, 11), (41, 62), (41, 26), (42, 49), (42, 26), (42, 53), (42, 43), (42, 32), (42, 64), (42, 70), (42, 29), (43, 54), (43, 41), (43, 51), (43, 27), (43, 47), (43, 46), (43, 67), (43, 25), (43, 56), (44, 16), (44, 8), (44, 60), (44, 25), (44, 63), (44, 24), (45, 51), (45, 6), (45, 50), (45, 62), (45, 38), (45, 32), (45, 42), (45, 24), (45, 47), (46, 68), (46, 64), (46, 17), (46, 4), (46, 59), (46, 30), (46, 1), (47, 57), (47, 58), (47, 69), (47, 24), (47, 35), (47, 1), (47, 17), (47, 47), (47, 43), (48, 1), (49, 45), (49, 50), (49, 53), (49, 18), (49, 68), (49, 64), (49, 69), (50, 62), (50, 33), (50, 4), (50, 36), (50, 37), (50, 19), (50, 13), (50, 27), (50, 65), (50, 54);



CREATE TABLE IF NOT EXISTS `Cook` (
  `Cook_ID` int NOT NULL AUTO_INCREMENT,
  `First_Name` varchar(20) NOT NULL,
  `Last_Name` varchar(20) NOT NULL,
  `Phone_Number` bigint NOT NULL,  
  `Date_of_Birth` date NOT NULL,
  `Years_of_Experience` int NOT NULL,
  `Cook_Level` enum('C Cook', 'B Cook', 'A Cook', 'Chef Assistant', 'Chef') NOT NULL,
  `Image_ID` int DEFAULT 1,
  PRIMARY KEY (`Cook_ID`),
  FOREIGN KEY (`Image_ID`) REFERENCES `Images`(`Image_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE VIEW `CookView` AS
SELECT 
  `Cook_ID`,
  `First_Name`,
  `Last_Name`,
  `Phone_Number`,
  `Date_of_Birth`,
  TIMESTAMPDIFF(YEAR, `Date_of_Birth`, CURDATE()) AS `Age`,
  `Years_of_Experience`,
  `Cook_Level`,
  `Image_ID`
FROM `Cook`;

CREATE VIEW CookLevelMapping AS
SELECT 
    Cook_ID,
    First_Name,
    Last_Name,
    Phone_Number,
    Date_of_Birth,
    Years_of_Experience,
    CASE Cook_Level
        WHEN 'C Cook' THEN 1
        WHEN 'B Cook' THEN 2
        WHEN 'A Cook' THEN 3
        WHEN 'Chef Assistant' THEN 4
        WHEN 'Chef' THEN 5
    END AS Level_Number,
    Image_ID
FROM 
    Cook;


CREATE TABLE IF NOT EXISTS `Recipe_Cooks` (
  `Recipe_ID` int,
  `Cook_ID` int,
  PRIMARY KEY (`Recipe_ID`, `Cook_ID`),
  FOREIGN KEY (`Recipe_ID`) REFERENCES `Recipe`(`Recipe_ID`) ON DELETE CASCADE,
  FOREIGN KEY (`Cook_ID`) REFERENCES `Cook`(`Cook_ID`) ON DELETE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `CookSpecializesInCuisine` (
  `Cook_ID` int,
  `Cuisine_ID` int,
  PRIMARY KEY (`Cook_ID`, `Cuisine_ID`),
  FOREIGN KEY (`Cook_ID`) REFERENCES `Cook`(`Cook_ID`) ON DELETE CASCADE,
  FOREIGN KEY (`Cuisine_ID`) REFERENCES `Cuisine`(`Cuisine_ID`) ON DELETE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;






CREATE TABLE IF NOT EXISTS `Season` (
  `Season_ID` int AUTO_INCREMENT,
  `Year` int,
  PRIMARY KEY (`Season_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `Episode` (
  `Episode_ID` int AUTO_INCREMENT,
  `Episode_No` tinyint NOT NULL CHECK (`Episode_No` >= 1 AND `Episode_No` <= 10),
  `Season_ID` int,
  PRIMARY KEY (`Episode_ID`),
  FOREIGN KEY (`Season_ID`) REFERENCES `Season`(`Season_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `EpisodeJudge` (
  `Episode_ID` int,
  `Cook_ID` int,
  PRIMARY KEY (`Episode_ID`, `Cook_ID`),
  FOREIGN KEY (`Episode_ID`) REFERENCES `Episode`(`Episode_ID`) ON DELETE CASCADE,
  FOREIGN KEY (`Cook_ID`) REFERENCES `Cook`(`Cook_ID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `EpisodeCookCuisineRecipe` (
  `Episode_ID` int,
  `Cook_ID` int,
  `Cuisine_ID` int,
  `Recipe_ID` int,
  PRIMARY KEY (`Episode_ID`, `Cook_ID`),
  FOREIGN KEY (`Episode_ID`) REFERENCES `Episode`(`Episode_ID`) ON DELETE CASCADE,
  FOREIGN KEY (`Cook_ID`) REFERENCES `Cook`(`Cook_ID`) ON DELETE CASCADE,
  FOREIGN KEY (`Cuisine_ID`) REFERENCES `Cuisine`(`Cuisine_ID`) ON DELETE CASCADE,
  FOREIGN KEY (`Recipe_ID`) REFERENCES `Recipe`(`Recipe_ID`) ON DELETE CASCADE,
  UNIQUE (`Episode_ID`, `Recipe_ID`),
  UNIQUE (`Episode_ID`, `Cuisine_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE IF NOT EXISTS `CookRatings` (
  `Episode_ID` int,
  `Judge_Cook_ID` int,
  `Episode_Cook_ID` int,
  `Rating` tinyint NOT NULL CHECK (`Rating` BETWEEN 1 AND 5),
  PRIMARY KEY (`Episode_ID`, `Judge_Cook_ID`, `Episode_Cook_ID`),
  FOREIGN KEY (`Episode_ID`) REFERENCES `Episode`(`Episode_ID`),
  FOREIGN KEY (`Judge_Cook_ID`) REFERENCES `Cook`(`Cook_ID`),
  FOREIGN KEY (`Episode_Cook_ID`) REFERENCES `Cook`(`Cook_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;


-- ------------------------------------------- TRIGGERS ---------------------------------------------------
DELIMITER //

CREATE TRIGGER before_episode_insert
BEFORE INSERT ON Episode
FOR EACH ROW
BEGIN
    DECLARE max_episode_no INT;
  -- Check if the season already has 10 episodes
    SELECT COUNT(*)
    INTO max_episode_no
    FROM Episode
    WHERE Season_ID = NEW.Season_ID;

    IF max_episode_no >= 10 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'A season cannot have more than 10 episodes.';
    END IF;
    
    -- Check if the new episode number is sequential
    SELECT IFNULL(MAX(Episode_No), 0) + 1 INTO max_episode_no
    FROM Episode
    WHERE Season_ID = NEW.Season_ID;

    IF NEW.Episode_No != max_episode_no THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Episode numbers must be sequential within a season.';
    END IF;

    
END;
//
DELIMITER ;

DELIMITER //

CREATE TRIGGER before_episode_judge_insert
BEFORE INSERT ON EpisodeJudge
FOR EACH ROW
BEGIN
    DECLARE judge_count INT;
    DECLARE episodes_in_a_row INT;
    DECLARE current_episode_no INT;
    DECLARE current_season_id INT;
    -- Count the number of judges for the episode
    SELECT COUNT(*)
    INTO judge_count
    FROM EpisodeJudge
    WHERE Episode_ID = NEW.Episode_ID;

    -- If the episode already has 3 judges, raise an error
    IF judge_count >= 3 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'An episode cannot have more than 3 judges.';
    END IF;


    

    -- Get the episode number and season ID of the new entry
    SELECT Episode_No, Season_ID
    INTO current_episode_no, current_season_id
    FROM Episode
    WHERE Episode_ID = NEW.Episode_ID;

    -- Check how many consecutive episodes the judge has been in
    SELECT COUNT(*)
    INTO episodes_in_a_row
    FROM (
        SELECT EJ.Episode_ID
        FROM EpisodeJudge EJ
        INNER JOIN Episode E ON EJ.Episode_ID = E.Episode_ID
        WHERE EJ.Cook_ID = NEW.Cook_ID
        AND E.Season_ID = current_season_id
        AND E.Episode_No BETWEEN (current_episode_no - 3) AND (current_episode_no - 1)
    ) AS cons_ep;

    IF episodes_in_a_row >= 3 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'A judge cannot be a judge for more than 3 episodes in a row in a given season.';
    END IF;
END;
//

DELIMITER ;
DELIMITER //

DELIMITER //

CREATE TRIGGER before_insert_episodecookcuisinerecipe -- add constraint chef represents cuisine
BEFORE INSERT ON EpisodeCookCuisineRecipe
FOR EACH ROW
BEGIN
    DECLARE cook_is_judge INT;
    DECLARE new_recipe_cuisine_id INT;
    DECLARE cook_recipe_count_in_episode INT;
    DECLARE specialization_count INT;

    DECLARE current_episode_no INT;
    DECLARE current_season_id INT;

    DECLARE consecutive_chef_count INT;
    DECLARE consecutive_cuisine_count INT;
    DECLARE consecutive_recipe_count INT;

    -- Check if the cook is not a judge in the episode
    SELECT COUNT(*)
    INTO cook_is_judge
    FROM EpisodeJudge
    WHERE Episode_ID = NEW.Episode_ID
    AND Cook_ID = NEW.Cook_ID;

    IF cook_is_judge > 0 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'The cook cannot be a judge in the same episode.';
    END IF;

    -- Check if the recipe belongs to the given cuisine
    SELECT Cuisine_ID INTO new_recipe_cuisine_id FROM Recipe WHERE Recipe_ID = NEW.Recipe_ID;

    IF new_recipe_cuisine_id <> NEW.Cuisine_ID THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'The recipe must belong to the given cuisine.';
    END IF;
    -- Check if cook specializes in given cuisine
    SELECT COUNT(*)
    INTO specialization_count
    FROM CookSpecializesInCuisine
    WHERE Cook_ID = NEW.Cook_ID AND Cuisine_ID = NEW.Cuisine_ID;

    IF specialization_count = 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'The cook does not specialize in the given cuisine.';
    END IF;

    -- Check if there are at most 10 EpisodeCookCuisineRecipe records for the given episode
    SELECT COUNT(*)
    INTO cook_recipe_count_in_episode
    FROM EpisodeCookCuisineRecipe
    WHERE Episode_ID = NEW.Episode_ID;

    IF cook_recipe_count_in_episode >= 10 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'There can be at most 10 EpisodeCookCuisineRecipe records for a given episode.';
    END IF;


    SELECT Episode_No, Season_ID
    INTO current_episode_no, current_season_id
    FROM Episode
    WHERE Episode_ID = NEW.Episode_ID;

    -- check for 3 concecutive chefs
    SELECT COUNT(*)
    INTO consecutive_chef_count
    FROM (SELECT ECCR.Episode_ID
         FROM Episode E JOIN EpisodeCookCuisineRecipe ECCR 
         ON E.Episode_ID = ECCR.Episode_ID
         WHERE current_season_id = E.Season_ID
         AND ECCR.Cook_ID = NEW.Cook_ID  
         AND E.Episode_No BETWEEN (current_episode_no - 3) AND (current_episode_no - 1)
    ) AS cons_chef;

    IF consecutive_chef_count >= 3 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A Chef cannot be a participant for more than 3 episodes in a row in a given season.';
    END IF;

    SELECT COUNT(*)
    INTO consecutive_cuisine_count
    FROM (SELECT ECCR.Episode_ID FROM Episode E JOIN EpisodeCookCuisineRecipe ECCR 
    ON E.Episode_ID = ECCR.Episode_ID
    WHERE NEW.Cuisine_ID = ECCR.Cuisine_ID
    AND E.Season_ID = current_season_id
    AND E.Episode_No BETWEEN (current_episode_no - 3) AND (current_episode_no - 1)
    ) AS cons_cuis;

    IF consecutive_cuisine_count >= 3 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A cuisine cannot appear for more than 3 episodes in a row in a given season.';
    END IF;

    SELECT COUNT(*)
    INTO consecutive_recipe_count
    FROM (SELECT ECCR.Episode_ID FROM Episode E JOIN EpisodeCookCuisineRecipe ECCR 
    ON E.Episode_ID = ECCR.Episode_ID
    WHERE E.Season_ID = current_season_id
    AND NEW.Recipe_ID = ECCR.Recipe_ID
    AND E.Episode_No BETWEEN (current_episode_no - 3) AND (current_episode_no - 1)
    ) AS cons_rec;

    IF consecutive_recipe_count >= 3 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A recipe cannot appear for more than 3 episodes in a row in a given season.';
    END IF;

END;
//
DELIMITER ;


DELIMITER //

CREATE TRIGGER before_insert_cookratings
BEFORE INSERT ON CookRatings
FOR EACH ROW
BEGIN
    DECLARE judge_is_valid INT;
    DECLARE cook_is_valid INT;

    -- Check if the judge cook is a judge in the given episode
    SELECT COUNT(*)
    INTO judge_is_valid
    FROM EpisodeJudge
    WHERE Episode_ID = NEW.Episode_ID
    AND Cook_ID = NEW.Judge_Cook_ID;

    IF judge_is_valid = 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'The judge cook must be a judge in the given episode.';
    END IF;

    -- Check if the episode cook is a cook in the given episode
    SELECT COUNT(*)
    INTO cook_is_valid
    FROM EpisodeCookCuisineRecipe
    WHERE Episode_ID = NEW.Episode_ID
    AND Cook_ID = NEW.Episode_Cook_ID;

    IF cook_is_valid = 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'The episode cook must be a cook in the given episode.';
    END IF;
END;
//

DELIMITER ;

DELIMITER //

CREATE TRIGGER `before_judge_delete`
BEFORE DELETE ON `EpisodeJudge`
FOR EACH ROW
BEGIN
    DECLARE judge_count INT;
    SELECT COUNT(*) INTO judge_count FROM `EpisodeJudge` WHERE `Episode_ID` = OLD.`Episode_ID`;
    IF judge_count <= 3 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Cannot remove a judge as each episode must have exactly 3 judges';
    END IF;
END;
//

DELIMITER ;


-- Cook 56
INSERT INTO `Cook` (`First_Name`, `Last_Name`, `Phone_Number`, `Date_of_Birth`, `Years_of_Experience`, `Cook_Level`, `Image_ID`) VALUES
('John', 'Doe', 1234567890, '1980-01-01', 10, 'C Cook', NULL),
('Jane', 'Smith', 1234567891, '1982-02-02', 12, 'B Cook', NULL),
('Alice', 'Johnson', 1234567892, '1984-03-03', 8, 'A Cook', NULL),
('Bob', 'Williams', 1234567893, '1986-04-04', 15, 'Chef Assistant', NULL),
('Charlie', 'Brown', 1234567894, '1988-05-05', 5, 'Chef', NULL),
('David', 'Jones', 1234567895, '1990-06-06', 20, 'C Cook', NULL),
('Emma', 'Davis', 1234567896, '1992-07-07', 9, 'B Cook', NULL),
('Fiona', 'Garcia', 1234567897, '1994-08-08', 7, 'A Cook', NULL),
('George', 'Martinez', 1234567898, '1996-09-09', 6, 'Chef Assistant', NULL),
('Hannah', 'Rodriguez', 1234567899, '1998-10-10', 11, 'Chef', NULL),
('Isaac', 'Martinez', 2234567890, '1979-11-11', 3, 'C Cook', NULL),
('Jack', 'Hernandez', 2234567891, '1977-12-12', 25, 'B Cook', NULL),
('Karen', 'Lopez', 2234567892, '1981-01-13', 18, 'A Cook', NULL),
('Leo', 'Gonzalez', 2234567893, '1983-02-14', 22, 'Chef Assistant', NULL),
('Mia', 'Wilson', 2234567894, '1985-03-15', 4, 'Chef', NULL),
('Noah', 'Anderson', 2234567895, '1987-04-16', 10, 'C Cook', NULL),
('Olivia', 'Thomas', 2234567896, '1989-05-17', 9, 'B Cook', NULL),
('Peter', 'Taylor', 2234567897, '1991-06-18', 8, 'A Cook', NULL),
('Quinn', 'Moore', 2234567898, '1993-07-19', 12, 'Chef Assistant', NULL),
('Rachel', 'Jackson', 2234567899, '1995-08-20', 6, 'Chef', NULL),
('Steve', 'Martin', 3234567890, '1978-09-21', 14, 'C Cook', NULL),
('Tina', 'Lee', 3234567891, '1976-10-22', 13, 'B Cook', NULL),
('Umar', 'Perez', 3234567892, '1982-11-23', 7, 'A Cook', NULL),
('Vera', 'White', 3234567893, '1984-12-24', 16, 'Chef Assistant', NULL),
('Legat', 'Spirun', 3231847893, '1984-12-20', 14, 'Chef Assistant', NULL),
('Will', 'Harris', 3234567894, '1986-01-25', 15, 'Chef', NULL),
('Xena', 'Clark', 3234567895, '1988-02-26', 9, 'C Cook', NULL),
('Yusuf', 'Lewis', 3234567896, '1990-03-27', 8, 'B Cook', NULL),
('Zoe', 'Walker', 3234567897, '1992-04-28', 11, 'A Cook', NULL),
('Aaron', 'Hall', 3234567898, '1994-05-29', 10, 'Chef Assistant', NULL),
('Bella', 'Allen', 3234567899, '1996-06-30', 5, 'Chef', NULL),
('Pipis', 'Poupos', 1234567890, '1980-01-01', 10, 'C Cook', NULL),
('Chef', 'Chefopoulos', 1234567890, '1980-01-01', 10, 'Chef', NULL),
('Rigas', 'Chefidis', 1234567890, '1980-01-01', 10, 'C Cook', NULL),
('Chefis', 'Cheferlis', 1234567890, '1980-01-01', 10, 'C Cook', NULL),
('Roulis', 'Magiroulis', 1234567890, '1980-01-01', 10, 'C Cook', NULL),
('Cathy', 'Nelson', 4234567890, '1981-07-01', 14, 'C Cook', NULL),
('Dylan', 'Carter', 4234567891, '1983-08-02', 12, 'B Cook', NULL),
('Rikis', 'Frikis', 4234567892, '1985-09-03', 10, 'A Cook', NULL),
('Frank', 'Perez', 4234567893, '1987-10-04', 8, 'Chef Assistant', NULL),
('Grace', 'Roberts', 4234567894, '1989-11-05', 6, 'Chef', NULL),
('Henry', 'Turner', 4234567895, '1991-12-06', 4, 'C Cook', NULL),
('Ivy', 'Phillips', 4234567896, '1993-01-07', 3, 'B Cook', NULL),
('Jake', 'Campbell', 4234567897, '1995-02-08', 7, 'A Cook', NULL),
('Kara', 'Parker', 4234567898, '1997-03-09', 5, 'Chef Assistant', NULL),
('Liam', 'Evans', 4234567899, '1999-04-10', 2, 'Chef', NULL),
('Mona', 'Edwards', 5234567890, '1980-05-11', 25, 'C Cook', NULL),
('Nathan', 'Collins', 5234567891, '1982-06-12', 20, 'B Cook', NULL),
('Olga', 'Stewart', 5234567892, '1984-07-13', 18, 'A Cook', NULL),
('Paul', 'Sanchez', 5234567893, '1986-08-14', 15, 'Chef Assistant', NULL),
('Quincy', 'Morris', 5234567894, '1988-09-15', 13, 'Chef', NULL),
('Rita', 'Rogers', 5234567895, '1990-10-16', 12, 'C Cook', NULL),
('Sam', 'Reed', 5234567896, '1992-11-17', 10, 'B Cook', NULL),
('Tara', 'Cook', 5234567897, '1994-12-18', 9, 'A Cook', NULL),
('Ulysses', 'Bell', 5234567898, '1996-01-19', 8, 'Chef Assistant', NULL),
('Vicky', 'Murphy', 5234567899, '1998-02-20', 7, 'Chef', NULL);







-- Recipe_Cooks 171
INSERT INTO `Recipe_Cooks` (`Recipe_ID`, `Cook_ID`) VALUES
(1, 2), (1, 27), (1, 29), (2, 3), (2, 24), (2, 45), (2, 5), (2, 17), (2, 41), (3, 23), (3, 3), (3, 51), (3, 39), (4, 23), (5, 17), (5, 40), (5, 50), (5, 29), (6, 7), (6, 19), (7, 32), (7, 28), (7, 20), (7, 13), (7, 55), (8, 46), (8, 24), (8, 22), (8, 5), (9, 15), (9, 26), (9, 22), (10, 12), (10, 24), (10, 36), (10, 56), (11, 4), (12, 26), (12, 22), (13, 9), (13, 35), (13, 38), (13, 43), (13, 47), (14, 26), (15, 41), (16, 40), (17, 23), (17, 31), (17, 37), (17, 44), (17, 20), (18, 26), (18, 30), (18, 2), (18, 32), (18, 38), (19, 35), (19, 22), (19, 10), (19, 30), (19, 53), (19, 37), (20, 2), (20, 47), (20, 34), (20, 18), (20, 32), (20, 17), (21, 18), (21, 47), (21, 24), (21, 34), (21, 25), (21, 26), (22, 55), (22, 23), (23, 19), (23, 10), (23, 24), (23, 40), (23, 1), (23, 31), (24, 35), (25, 27), (26, 52), (26, 5), (27, 31), (27, 29), (27, 43), (28, 31), (28, 50), (28, 29), (28, 39), (29, 28), (29, 13), (29, 7), (29, 17), (29, 26), (29, 11), (30, 42), (30, 19), (31, 45), (31, 37), (31, 21), (31, 23), (32, 24), (33, 30), (33, 2), (33, 33), (34, 51), (34, 39), (34, 6), (34, 34), (34, 53), (35, 46), (35, 7), (35, 43), (35, 10), (36, 22), (36, 48), (36, 4), (36, 21), (37, 31), (37, 20), (37, 39), (37, 38), (38, 2), (38, 34), (38, 7), (38, 33), (38, 52), (39, 26), (39, 27), (39, 7), (39, 29), (39, 37), (39, 20), (40, 23), (40, 46), (40, 40), (40, 48), (40, 35), (40, 6), (41, 8), (41, 18), (41, 27), (41, 24), (42, 23), (42, 25), (42, 6), (42, 52), (43, 27), (44, 6), (44, 51), (45, 49), (45, 44), (45, 12), (46, 17), (46, 41), (46, 2), (46, 40), (47, 18), (48, 11), (48, 48), (48, 20), (49, 15), (49, 39), (49, 33), (50, 16), (50, 22);

-- CookSpecializesInCuisine 172
INSERT INTO `CookSpecializesInCuisine` (`Cook_ID`,`Cuisine_ID`) VALUES
(1, 4), (1, 1), (2, 7), (2, 14), (2, 6), (2, 13), (2, 12), (3, 18), (3, 12), (3, 4), (3, 11), (4, 5), (4, 7), (4, 20), (4, 13), (5, 7), (5, 14), (6, 7), (6, 10), (6, 18), (6, 3), (6, 13), (7, 9), (7, 13), (7, 1), (8, 20), (8, 8), (9, 17), (9, 18), (9, 2), (10, 4), (10, 20), (10, 17), (10, 10), (10, 13), (11, 10), (11, 2), (12, 14), (12, 8), (13, 3), (13, 1), (14, 1), (14, 11), (14, 4), (14, 16), (15, 17), (15, 9), (15, 5), (15, 4), (16, 17), (16, 14), (16, 16), (17, 20), (17, 12), (17, 17), (17, 19), (18, 4), (18, 12), (18, 6), (19, 19), (19, 7), (19, 11), (20, 12), (20, 15), (20, 18), (20, 8), (20, 10), (21, 1), (21, 5), (21, 20), (21, 16), (21, 4), (22, 19), (22, 17), (22, 4), (23, 13), (23, 10), (23, 7), (23, 3), (24, 3), (24, 18), (24, 20), (25, 15), (25, 3), (26, 15), (26, 1), (26, 3), (27, 3), (27, 19), (27, 12), (28, 18), (28, 1), (28, 3), (28, 14), (28, 13), (29, 1), (29, 17), (30, 4), (30, 2), (31, 10), (32, 2), (32, 7), (33, 6), (34, 5), (34, 1), (34, 15), (34, 13), (35, 7), (35, 13), (35, 6), (35, 16), (35, 20), (36, 9), (36, 5), (36, 16), (37, 12), (37, 8), (37, 11), (37, 13), (37, 20), (38, 14), (38, 2), (38, 9), (38, 4), (38, 3), (39, 12), (40, 15), (41, 12), (41, 6), (41, 9), (41, 5), (41, 17), (42, 4), (42, 18), (42, 19), (42, 15), (42, 14), (43, 2), (44, 16), (45, 16), (45, 9), (45, 3), (45, 6), (46, 17), (47, 5), (47, 14), (48, 1), (48, 17), (48, 8), (48, 20), (48, 13), (49, 7), (49, 16), (49, 15), (50, 16), (51, 16), (51, 15), (52, 5), (52, 6), (52, 14), (52, 18), (52, 1), (53, 19), (54, 20), (54, 4), (54, 14), (55, 20), (55, 3), (55, 5), (55, 16), (56, 2), (56, 20);

-- Season 5
INSERT INTO `Season` (`Year`)
VALUES (2019), (2020), (2021), (2022), (2023);

INSERT INTO Episode (Episode_No, Season_ID) VALUES (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1);
INSERT INTO Episode (Episode_No, Season_ID) VALUES (1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (6, 2), (7, 2), (8, 2), (9, 2), (10, 2);
INSERT INTO Episode (Episode_No, Season_ID) VALUES (1, 3), (2, 3), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3), (9, 3), (10, 3);
INSERT INTO Episode (Episode_No, Season_ID) VALUES (1, 4), (2, 4), (3, 4), (4, 4), (5, 4), (6, 4), (7, 4), (8, 4), (9, 4), (10, 4);
INSERT INTO Episode (Episode_No, Season_ID) VALUES (1, 5), (2, 5), (3, 5), (4, 5), (5, 5), (6, 5), (7, 5), (8, 5), (9, 5), (10, 5);

INSERT INTO `EpisodeJudge` (`Episode_ID`, `Cook_ID`) VALUES
(1,16),
(1,36),
(1,4),
(2,24),
(2,53),
(2,6),
(3,25),
(3,18),
(3,43),
(4,26),
(4,51),
(4,54),
(5,42),
(5,50),
(5,20),
(6,44),
(6,5),
(6,15),
(7,1),
(7,21),
(7,15),
(8,1),
(8,2),
(8,34),
(9,4),
(9,5),
(9,39),
(10,3),
(10,12),
(10,46);
INSERT INTO `EpisodeCookCuisineRecipe` (`Episode_ID`, `Cook_ID`, `Cuisine_ID`, `Recipe_ID`) VALUES
(1,34,15,15),
(1,42,19,39),
(1,2,13,33),
(1,52,6,6),
(1,38,2,2),
(1,37,8,8),
(1,24,3,3),
(1,3,18,18),
(1,35,20,40),
(1,14,16,36),
(2,14,16,16),
(2,45,6,6),
(2,26,1,41),
(2,38,3,3),
(2,3,11,31),
(2,48,8,8),
(2,20,10,10),
(2,52,18,18),
(2,22,4,24),
(2,56,2,2),
(3,8,20,40),
(3,52,18,18),
(3,20,12,32),
(3,49,15,15),
(3,31,10,10),
(3,17,19,19),
(3,41,5,25),
(3,5,7,27),
(3,35,6,26),
(3,26,3,46),
(4,27,19,39),
(4,10,4,4),
(4,28,13,33),
(4,34,15,35),
(4,46,17,37),
(4,20,12,48),
(4,37,8,28),
(4,5,14,14),
(4,16,16,16),
(4,55,5,5),
(5,18,12,12),
(5,22,17,17),
(5,19,11,31),
(5,6,13,33),
(5,51,16,16),
(5,30,2,50),
(5,37,8,8),
(5,17,20,20),
(5,12,14,14),
(5,2,7,27),
(6,4,5,5),
(6,3,11,11),
(6,8,20,40),
(6,41,6,26),
(6,55,3,43),
(6,23,7,27),
(6,51,16,36),
(6,48,8,8),
(6,43,2,50),
(6,38,4,24),
(7,27,3,46),
(7,56,2,42),
(7,54,14,14),
(7,49,15,35),
(7,52,6,26),
(7,2,12,32),
(7,4,5,5),
(7,38,4,47),
(7,10,17,17),
(7,34,13,33),
(8,12,8,8),
(8,50,16,36),
(8,23,3,43),
(8,36,5,25),
(8,45,6,6),
(8,28,14,34),
(8,35,7,27),
(8,16,17,37),
(8,3,4,4),
(8,41,12,12),
(9,35,13,33),
(9,41,9,29),
(9,55,20,20),
(9,9,17,37),
(9,37,11,31),
(9,20,8,28),
(9,51,16,16),
(9,56,2,42),
(9,26,15,35),
(9,52,1,49),
(10,37,11,11),
(10,49,7,27),
(10,42,15,15),
(10,11,10,10),
(10,2,12,48),
(10,43,2,22),
(10,1,4,44),
(10,52,6,26),
(10,28,1,41),
(10,41,5,5);
INSERT INTO `CookRatings` (`Episode_ID`, `Judge_Cook_ID`, `Episode_Cook_ID`, `Rating`) VALUES
(1,16,34,3),
(1,16,42,4),
(1,16,2,1),
(1,16,52,4),
(1,16,38,2),
(1,16,37,3),
(1,16,24,1),
(1,16,3,2),
(1,16,35,5),
(1,16,14,4),
(1,36,34,2),
(1,36,42,4),
(1,36,2,3),
(1,36,52,1),
(1,36,38,4),
(1,36,37,2),
(1,36,24,2),
(1,36,3,3),
(1,36,35,2),
(1,36,14,3),
(1,4,34,3),
(1,4,42,1),
(1,4,2,3),
(1,4,52,5),
(1,4,38,3),
(1,4,37,1),
(1,4,24,4),
(1,4,3,5),
(1,4,35,4),
(1,4,14,1),
(2,24,14,1),
(2,24,45,2),
(2,24,26,1),
(2,24,38,4),
(2,24,3,3),
(2,24,48,4),
(2,24,20,5),
(2,24,52,3),
(2,24,22,2),
(2,24,56,4),
(2,53,14,3),
(2,53,45,2),
(2,53,26,1),
(2,53,38,2),
(2,53,3,2),
(2,53,48,2),
(2,53,20,3),
(2,53,52,4),
(2,53,22,2),
(2,53,56,3),
(2,6,14,1),
(2,6,45,5),
(2,6,26,4),
(2,6,38,4),
(2,6,3,4),
(2,6,48,5),
(2,6,20,4),
(2,6,52,5),
(2,6,22,3),
(2,6,56,1),
(3,25,8,5),
(3,25,52,3),
(3,25,20,3),
(3,25,49,4),
(3,25,31,3),
(3,25,17,5),
(3,25,41,3),
(3,25,5,4),
(3,25,35,5),
(3,25,26,3),
(3,18,8,4),
(3,18,52,4),
(3,18,20,1),
(3,18,49,2),
(3,18,31,2),
(3,18,17,3),
(3,18,41,3),
(3,18,5,1),
(3,18,35,2),
(3,18,26,3),
(3,43,8,3),
(3,43,52,4),
(3,43,20,4),
(3,43,49,4),
(3,43,31,2),
(3,43,17,1),
(3,43,41,2),
(3,43,5,1),
(3,43,35,2),
(3,43,26,5),
(4,26,27,3),
(4,26,10,4),
(4,26,28,4),
(4,26,34,3),
(4,26,46,4),
(4,26,20,1),
(4,26,37,1),
(4,26,5,5),
(4,26,16,1),
(4,26,55,1),
(4,51,27,2),
(4,51,10,2),
(4,51,28,1),
(4,51,34,1),
(4,51,46,5),
(4,51,20,5),
(4,51,37,1),
(4,51,5,5),
(4,51,16,2),
(4,51,55,2),
(4,54,27,1),
(4,54,10,5),
(4,54,28,3),
(4,54,34,5),
(4,54,46,3),
(4,54,20,2),
(4,54,37,3),
(4,54,5,4),
(4,54,16,1),
(4,54,55,5),
(5,42,18,2),
(5,42,22,4),
(5,42,19,2),
(5,42,6,2),
(5,42,51,5),
(5,42,30,1),
(5,42,37,3),
(5,42,17,4),
(5,42,12,1),
(5,42,2,1),
(5,50,18,5),
(5,50,22,4),
(5,50,19,4),
(5,50,6,4),
(5,50,51,1),
(5,50,30,5),
(5,50,37,1),
(5,50,17,4),
(5,50,12,5),
(5,50,2,3),
(5,20,18,3),
(5,20,22,1),
(5,20,19,3),
(5,20,6,2),
(5,20,51,4),
(5,20,30,4),
(5,20,37,2),
(5,20,17,1),
(5,20,12,3),
(5,20,2,4),
(6,44,4,4),
(6,44,3,5),
(6,44,8,1),
(6,44,41,4),
(6,44,55,2),
(6,44,23,1),
(6,44,51,3),
(6,44,48,1),
(6,44,43,4),
(6,44,38,3),
(6,5,4,4),
(6,5,3,2),
(6,5,8,5),
(6,5,41,4),
(6,5,55,1),
(6,5,23,5),
(6,5,51,3),
(6,5,48,3),
(6,5,43,3),
(6,5,38,3),
(6,15,4,3),
(6,15,3,1),
(6,15,8,4),
(6,15,41,4),
(6,15,55,5),
(6,15,23,2),
(6,15,51,1),
(6,15,48,2),
(6,15,43,3),
(6,15,38,4),
(7,1,27,1),
(7,1,56,2),
(7,1,54,2),
(7,1,49,4),
(7,1,52,1),
(7,1,2,4),
(7,1,4,1),
(7,1,38,1),
(7,1,10,4),
(7,1,34,5),
(7,21,27,5),
(7,21,56,5),
(7,21,54,3),
(7,21,49,4),
(7,21,52,3),
(7,21,2,3),
(7,21,4,5),
(7,21,38,4),
(7,21,10,4),
(7,21,34,4),
(7,15,27,3),
(7,15,56,4),
(7,15,54,3),
(7,15,49,2),
(7,15,52,3),
(7,15,2,5),
(7,15,4,2),
(7,15,38,5),
(7,15,10,5),
(7,15,34,4),
(8,1,12,5),
(8,1,50,4),
(8,1,23,1),
(8,1,36,3),
(8,1,45,3),
(8,1,28,1),
(8,1,35,4),
(8,1,16,1),
(8,1,3,4),
(8,1,41,1),
(8,2,12,5),
(8,2,50,3),
(8,2,23,4),
(8,2,36,1),
(8,2,45,4),
(8,2,28,3),
(8,2,35,1),
(8,2,16,2),
(8,2,3,2),
(8,2,41,1),
(8,34,12,3),
(8,34,50,4),
(8,34,23,4),
(8,34,36,1),
(8,34,45,3),
(8,34,28,4),
(8,34,35,3),
(8,34,16,2),
(8,34,3,2),
(8,34,41,5),
(9,4,35,2),
(9,4,41,1),
(9,4,55,3),
(9,4,9,3),
(9,4,37,5),
(9,4,20,4),
(9,4,51,3),
(9,4,56,3),
(9,4,26,2),
(9,4,52,5),
(9,5,35,2),
(9,5,41,5),
(9,5,55,2),
(9,5,9,4),
(9,5,37,1),
(9,5,20,4),
(9,5,51,5),
(9,5,56,5),
(9,5,26,4),
(9,5,52,2),
(9,39,35,4),
(9,39,41,2),
(9,39,55,2),
(9,39,9,5),
(9,39,37,5),
(9,39,20,5),
(9,39,51,1),
(9,39,56,2),
(9,39,26,5),
(9,39,52,3),
(10,3,37,4),
(10,3,49,5),
(10,3,42,1),
(10,3,11,1),
(10,3,2,5),
(10,3,43,5),
(10,3,1,2),
(10,3,52,3),
(10,3,28,4),
(10,3,41,2),
(10,12,37,1),
(10,12,49,5),
(10,12,42,5),
(10,12,11,1),
(10,12,2,4),
(10,12,43,5),
(10,12,1,3),
(10,12,52,5),
(10,12,28,1),
(10,12,41,1),
(10,46,37,3),
(10,46,49,4),
(10,46,42,3),
(10,46,11,2),
(10,46,2,3),
(10,46,43,2),
(10,46,1,3),
(10,46,52,2),
(10,46,28,2),
(10,46,41,5);
INSERT INTO `EpisodeJudge` (`Episode_ID`, `Cook_ID`) VALUES
(11,54),
(11,20),
(11,14),
(12,24),
(12,41),
(12,15),
(13,56),
(13,27),
(13,13),
(14,33),
(14,13),
(14,45),
(15,1),
(15,45),
(15,15),
(16,34),
(16,36),
(16,55),
(17,53),
(17,37),
(17,47),
(18,41),
(18,29),
(18,38),
(19,10),
(19,52),
(19,30),
(20,26),
(20,12),
(20,14);
INSERT INTO `EpisodeCookCuisineRecipe` (`Episode_ID`, `Cook_ID`, `Cuisine_ID`, `Recipe_ID`) VALUES
(11,51,16,36),
(11,41,5,5),
(11,4,13,33),
(11,28,3,43),
(11,38,2,42),
(11,21,1,49),
(11,8,8,28),
(11,45,6,6),
(11,39,12,48),
(11,53,19,39),
(12,30,4,44),
(12,22,19,39),
(12,17,12,48),
(12,6,18,18),
(12,21,16,36),
(12,27,3,46),
(12,20,15,15),
(12,47,14,34),
(12,7,13,33),
(12,54,20,20),
(13,38,9,9),
(13,47,5,5),
(13,52,1,21),
(13,16,16,16),
(13,19,19,39),
(13,20,15,35),
(13,7,13,33),
(13,6,3,46),
(13,17,20,40),
(13,39,12,48),
(14,8,8,8),
(14,36,9,29),
(14,54,20,20),
(14,32,2,50),
(14,40,15,15),
(14,20,18,18),
(14,19,11,31),
(14,38,4,44),
(14,4,7,27),
(14,9,17,17),
(15,23,7,27),
(15,21,5,45),
(15,32,2,42),
(15,52,1,41),
(15,22,19,19),
(15,19,11,11),
(15,28,18,38),
(15,38,9,9),
(15,6,10,10),
(15,41,6,6),
(16,53,19,39),
(16,48,20,20),
(16,16,14,14),
(16,28,3,3),
(16,49,16,16),
(16,25,15,15),
(16,3,11,31),
(16,11,10,1),
(16,23,13,33),
(16,41,6,6),
(17,27,19,19),
(17,40,15,35),
(17,2,13,13),
(17,52,5,45),
(17,12,8,8),
(17,1,1,49),
(17,15,9,29),
(17,22,4,4),
(17,23,10,30),
(17,10,17,37),
(18,52,18,18),
(18,44,16,36),
(18,6,3,43),
(18,47,5,5),
(18,1,4,47),
(18,17,12,32),
(18,49,7,27),
(18,7,9,9),
(18,21,1,41),
(18,42,15,35),
(19,7,9,9),
(19,6,10,10),
(19,24,18,18),
(19,36,5,45),
(19,19,11,31),
(19,55,16,36),
(19,11,2,22),
(19,2,6,6),
(19,53,19,19),
(19,28,13,33),
(20,37,20,40),
(20,23,10,1),
(20,8,8,8),
(20,16,17,17),
(20,41,12,12),
(20,3,11,11),
(20,5,14,34),
(20,25,15,35),
(20,17,19,19),
(20,2,7,27);
INSERT INTO `CookRatings` (`Episode_ID`, `Judge_Cook_ID`, `Episode_Cook_ID`, `Rating`) VALUES
(11,54,51,1),
(11,54,41,5),
(11,54,4,5),
(11,54,28,4),
(11,54,38,5),
(11,54,21,2),
(11,54,8,2),
(11,54,45,4),
(11,54,39,1),
(11,54,53,3),
(11,20,51,3),
(11,20,41,5),
(11,20,4,1),
(11,20,28,5),
(11,20,38,2),
(11,20,21,3),
(11,20,8,5),
(11,20,45,5),
(11,20,39,1),
(11,20,53,4),
(11,14,51,3),
(11,14,41,2),
(11,14,4,2),
(11,14,28,5),
(11,14,38,4),
(11,14,21,5),
(11,14,8,1),
(11,14,45,2),
(11,14,39,5),
(11,14,53,1),
(12,24,30,1),
(12,24,22,4),
(12,24,17,2),
(12,24,6,3),
(12,24,21,2),
(12,24,27,2),
(12,24,20,3),
(12,24,47,4),
(12,24,7,2),
(12,24,54,4),
(12,41,30,5),
(12,41,22,3),
(12,41,17,5),
(12,41,6,3),
(12,41,21,1),
(12,41,27,2),
(12,41,20,1),
(12,41,47,4),
(12,41,7,3),
(12,41,54,1),
(12,15,30,5),
(12,15,22,3),
(12,15,17,4),
(12,15,6,2),
(12,15,21,2),
(12,15,27,4),
(12,15,20,3),
(12,15,47,1),
(12,15,7,3),
(12,15,54,1),
(13,56,38,1),
(13,56,47,2),
(13,56,52,4),
(13,56,16,2),
(13,56,19,1),
(13,56,20,4),
(13,56,7,1),
(13,56,6,5),
(13,56,17,3),
(13,56,39,1),
(13,27,38,5),
(13,27,47,1),
(13,27,52,3),
(13,27,16,2),
(13,27,19,3),
(13,27,20,3),
(13,27,7,5),
(13,27,6,5),
(13,27,17,3),
(13,27,39,4),
(13,13,38,5),
(13,13,47,2),
(13,13,52,1),
(13,13,16,5),
(13,13,19,2),
(13,13,20,3),
(13,13,7,5),
(13,13,6,4),
(13,13,17,4),
(13,13,39,4),
(14,33,8,1),
(14,33,36,4),
(14,33,54,4),
(14,33,32,4),
(14,33,40,2),
(14,33,20,3),
(14,33,19,3),
(14,33,38,3),
(14,33,4,3),
(14,33,9,1),
(14,13,8,3),
(14,13,36,2),
(14,13,54,1),
(14,13,32,5),
(14,13,40,5),
(14,13,20,2),
(14,13,19,5),
(14,13,38,3),
(14,13,4,3),
(14,13,9,2),
(14,45,8,1),
(14,45,36,5),
(14,45,54,5),
(14,45,32,3),
(14,45,40,2),
(14,45,20,1),
(14,45,19,5),
(14,45,38,2),
(14,45,4,2),
(14,45,9,4),
(15,1,23,4),
(15,1,21,2),
(15,1,32,1),
(15,1,52,5),
(15,1,22,4),
(15,1,19,4),
(15,1,28,5),
(15,1,38,3),
(15,1,6,4),
(15,1,41,1),
(15,45,23,2),
(15,45,21,1),
(15,45,32,3),
(15,45,52,1),
(15,45,22,5),
(15,45,19,3),
(15,45,28,4),
(15,45,38,1),
(15,45,6,5),
(15,45,41,4),
(15,15,23,5),
(15,15,21,4),
(15,15,32,1),
(15,15,52,3),
(15,15,22,1),
(15,15,19,3),
(15,15,28,4),
(15,15,38,5),
(15,15,6,2),
(15,15,41,3),
(16,34,53,5),
(16,34,48,1),
(16,34,16,2),
(16,34,28,4),
(16,34,49,1),
(16,34,25,5),
(16,34,3,1),
(16,34,11,3),
(16,34,23,1),
(16,34,41,5),
(16,36,53,1),
(16,36,48,3),
(16,36,16,3),
(16,36,28,4),
(16,36,49,3),
(16,36,25,3),
(16,36,3,4),
(16,36,11,5),
(16,36,23,3),
(16,36,41,5),
(16,55,53,5),
(16,55,48,5),
(16,55,16,2),
(16,55,28,4),
(16,55,49,3),
(16,55,25,5),
(16,55,3,2),
(16,55,11,1),
(16,55,23,3),
(16,55,41,4),
(17,53,27,5),
(17,53,40,4),
(17,53,2,3),
(17,53,52,5),
(17,53,12,5),
(17,53,1,5),
(17,53,15,2),
(17,53,22,1),
(17,53,23,2),
(17,53,10,4),
(17,37,27,4),
(17,37,40,3),
(17,37,2,4),
(17,37,52,2),
(17,37,12,5),
(17,37,1,5),
(17,37,15,4),
(17,37,22,2),
(17,37,23,4),
(17,37,10,5),
(17,47,27,2),
(17,47,40,5),
(17,47,2,5),
(17,47,52,1),
(17,47,12,4),
(17,47,1,4),
(17,47,15,2),
(17,47,22,3),
(17,47,23,5),
(17,47,10,3),
(18,41,52,5),
(18,41,44,1),
(18,41,6,3),
(18,41,47,4),
(18,41,1,3),
(18,41,17,3),
(18,41,49,4),
(18,41,7,5),
(18,41,21,2),
(18,41,42,1),
(18,29,52,5),
(18,29,44,3),
(18,29,6,1),
(18,29,47,2),
(18,29,1,1),
(18,29,17,5),
(18,29,49,2),
(18,29,7,3),
(18,29,21,3),
(18,29,42,5),
(18,38,52,4),
(18,38,44,5),
(18,38,6,3),
(18,38,47,3),
(18,38,1,1),
(18,38,17,5),
(18,38,49,5),
(18,38,7,5),
(18,38,21,1),
(18,38,42,4),
(19,10,7,2),
(19,10,6,2),
(19,10,24,4),
(19,10,36,3),
(19,10,19,1),
(19,10,55,1),
(19,10,11,4),
(19,10,2,4),
(19,10,53,3),
(19,10,28,5),
(19,52,7,1),
(19,52,6,5),
(19,52,24,2),
(19,52,36,2),
(19,52,19,3),
(19,52,55,5),
(19,52,11,3),
(19,52,2,3),
(19,52,53,3),
(19,52,28,3),
(19,30,7,3),
(19,30,6,2),
(19,30,24,4),
(19,30,36,4),
(19,30,19,4),
(19,30,55,2),
(19,30,11,5),
(19,30,2,3),
(19,30,53,4),
(19,30,28,5),
(20,26,37,5),
(20,26,23,2),
(20,26,8,3),
(20,26,16,3),
(20,26,41,4),
(20,26,3,1),
(20,26,5,2),
(20,26,25,3),
(20,26,17,4),
(20,26,2,5),
(20,12,37,5),
(20,12,23,5),
(20,12,8,3),
(20,12,16,1),
(20,12,41,2),
(20,12,3,3),
(20,12,5,2),
(20,12,25,1),
(20,12,17,5),
(20,12,2,3),
(20,14,37,3),
(20,14,23,1),
(20,14,8,3),
(20,14,16,5),
(20,14,41,3),
(20,14,3,2),
(20,14,5,1),
(20,14,25,5),
(20,14,17,4),
(20,14,2,5);
INSERT INTO `EpisodeJudge` (`Episode_ID`, `Cook_ID`) VALUES
(21,4),
(21,12),
(21,47),
(22,56),
(22,19),
(22,52),
(23,49),
(23,11),
(23,20),
(24,9),
(24,28),
(24,38),
(25,25),
(25,1),
(25,47),
(26,22),
(26,46),
(26,55),
(27,8),
(27,4),
(27,15),
(28,10),
(28,53),
(28,45),
(29,50),
(29,52),
(29,37),
(30,8),
(30,50),
(30,27);
INSERT INTO `EpisodeCookCuisineRecipe` (`Episode_ID`, `Cook_ID`, `Cuisine_ID`, `Recipe_ID`) VALUES
(21,18,6,26),
(21,19,11,11),
(21,2,7,27),
(21,14,1,41),
(21,3,18,18),
(21,30,4,24),
(21,20,8,28),
(21,27,12,12),
(21,49,16,36),
(21,38,9,29),
(22,3,11,31),
(22,35,6,26),
(22,46,17,17),
(22,30,4,44),
(22,8,8,8),
(22,25,3,23),
(22,14,16,16),
(22,29,1,49),
(22,41,12,32),
(22,26,15,35),
(23,42,18,38),
(23,47,14,34),
(23,24,3,46),
(23,41,17,37),
(23,51,16,16),
(23,13,1,49),
(23,23,10,10),
(23,34,5,5),
(23,14,11,11),
(23,45,6,26),
(24,8,8,28),
(24,56,2,2),
(24,20,12,32),
(24,55,3,3),
(24,25,15,15),
(24,24,18,38),
(24,10,10,1),
(24,42,14,14),
(24,32,7,27),
(24,15,5,5),
(25,20,10,30),
(25,15,9,9),
(25,21,1,49),
(25,48,8,28),
(25,50,16,16),
(25,11,2,2),
(25,29,17,37),
(25,2,13,33),
(25,17,20,40),
(25,5,14,34),
(26,45,6,26),
(26,26,15,15),
(26,15,17,37),
(26,28,3,3),
(26,32,2,2),
(26,20,18,18),
(26,34,1,21),
(26,48,8,8),
(26,27,19,39),
(26,38,9,9),
(27,40,15,15),
(27,7,9,29),
(27,12,14,34),
(27,10,17,37),
(27,27,12,48),
(27,19,19,39),
(27,3,18,18),
(27,41,6,26),
(27,23,10,30),
(27,52,5,7),
(28,37,13,33),
(28,13,3,23),
(28,34,5,7),
(28,52,1,41),
(28,19,19,19),
(28,12,8,28),
(28,6,10,30),
(28,4,20,20),
(28,35,7,27),
(28,47,14,34),
(29,26,1,21),
(29,48,20,40),
(29,32,7,27),
(29,45,9,9),
(29,25,3,43),
(29,49,15,35),
(29,38,14,14),
(29,36,5,25),
(29,14,16,16),
(29,22,4,4),
(30,48,20,40),
(30,25,15,35),
(30,32,2,22),
(30,22,17,37),
(30,37,8,8),
(30,3,11,11),
(30,36,9,29),
(30,52,18,18),
(30,13,3,23),
(30,21,16,36);
INSERT INTO `CookRatings` (`Episode_ID`, `Judge_Cook_ID`, `Episode_Cook_ID`, `Rating`) VALUES
(21,4,18,5),
(21,4,19,4),
(21,4,2,1),
(21,4,14,2),
(21,4,3,2),
(21,4,30,1),
(21,4,20,1),
(21,4,27,3),
(21,4,49,1),
(21,4,38,4),
(21,12,18,3),
(21,12,19,4),
(21,12,2,2),
(21,12,14,1),
(21,12,3,1),
(21,12,30,1),
(21,12,20,5),
(21,12,27,1),
(21,12,49,3),
(21,12,38,4),
(21,47,18,1),
(21,47,19,3),
(21,47,2,1),
(21,47,14,3),
(21,47,3,5),
(21,47,30,3),
(21,47,20,5),
(21,47,27,3),
(21,47,49,3),
(21,47,38,1),
(22,56,3,1),
(22,56,35,2),
(22,56,46,3),
(22,56,30,1),
(22,56,8,2),
(22,56,25,5),
(22,56,14,2),
(22,56,29,2),
(22,56,41,3),
(22,56,26,5),
(22,19,3,4),
(22,19,35,4),
(22,19,46,5),
(22,19,30,3),
(22,19,8,3),
(22,19,25,3),
(22,19,14,4),
(22,19,29,2),
(22,19,41,5),
(22,19,26,2),
(22,52,3,1),
(22,52,35,5),
(22,52,46,2),
(22,52,30,2),
(22,52,8,2),
(22,52,25,5),
(22,52,14,1),
(22,52,29,5),
(22,52,41,2),
(22,52,26,5),
(23,49,42,5),
(23,49,47,2),
(23,49,24,2),
(23,49,41,4),
(23,49,51,1),
(23,49,13,5),
(23,49,23,4),
(23,49,34,2),
(23,49,14,3),
(23,49,45,3),
(23,11,42,2),
(23,11,47,3),
(23,11,24,5),
(23,11,41,4),
(23,11,51,1),
(23,11,13,4),
(23,11,23,2),
(23,11,34,4),
(23,11,14,1),
(23,11,45,5),
(23,20,42,3),
(23,20,47,1),
(23,20,24,1),
(23,20,41,5),
(23,20,51,3),
(23,20,13,1),
(23,20,23,3),
(23,20,34,3),
(23,20,14,4),
(23,20,45,1),
(24,9,8,1),
(24,9,56,3),
(24,9,20,4),
(24,9,55,5),
(24,9,25,3),
(24,9,24,2),
(24,9,10,3),
(24,9,42,3),
(24,9,32,3),
(24,9,15,2),
(24,28,8,4),
(24,28,56,4),
(24,28,20,4),
(24,28,55,5),
(24,28,25,2),
(24,28,24,5),
(24,28,10,5),
(24,28,42,2),
(24,28,32,3),
(24,28,15,2),
(24,38,8,3),
(24,38,56,2),
(24,38,20,5),
(24,38,55,3),
(24,38,25,1),
(24,38,24,1),
(24,38,10,3),
(24,38,42,3),
(24,38,32,1),
(24,38,15,4),
(25,25,20,5),
(25,25,15,4),
(25,25,21,1),
(25,25,48,1),
(25,25,50,4),
(25,25,11,5),
(25,25,29,3),
(25,25,2,2),
(25,25,17,2),
(25,25,5,5),
(25,1,20,3),
(25,1,15,2),
(25,1,21,4),
(25,1,48,1),
(25,1,50,1),
(25,1,11,3),
(25,1,29,3),
(25,1,2,4),
(25,1,17,3),
(25,1,5,2),
(25,47,20,5),
(25,47,15,4),
(25,47,21,4),
(25,47,48,3),
(25,47,50,4),
(25,47,11,1),
(25,47,29,1),
(25,47,2,1),
(25,47,17,3),
(25,47,5,3),
(26,22,45,5),
(26,22,26,5),
(26,22,15,1),
(26,22,28,3),
(26,22,32,4),
(26,22,20,2),
(26,22,34,5),
(26,22,48,3),
(26,22,27,3),
(26,22,38,2),
(26,46,45,4),
(26,46,26,1),
(26,46,15,1),
(26,46,28,5),
(26,46,32,5),
(26,46,20,2),
(26,46,34,2),
(26,46,48,2),
(26,46,27,2),
(26,46,38,4),
(26,55,45,2),
(26,55,26,3),
(26,55,15,3),
(26,55,28,1),
(26,55,32,1),
(26,55,20,5),
(26,55,34,3),
(26,55,48,1),
(26,55,27,1),
(26,55,38,4),
(27,8,40,5),
(27,8,7,3),
(27,8,12,4),
(27,8,10,3),
(27,8,27,4),
(27,8,19,3),
(27,8,3,4),
(27,8,41,3),
(27,8,23,1),
(27,8,52,3),
(27,4,40,2),
(27,4,7,3),
(27,4,12,2),
(27,4,10,4),
(27,4,27,1),
(27,4,19,3),
(27,4,3,5),
(27,4,41,5),
(27,4,23,1),
(27,4,52,5),
(27,15,40,1),
(27,15,7,1),
(27,15,12,5),
(27,15,10,3),
(27,15,27,1),
(27,15,19,1),
(27,15,3,1),
(27,15,41,5),
(27,15,23,4),
(27,15,52,2),
(28,10,37,3),
(28,10,13,2),
(28,10,34,2),
(28,10,52,5),
(28,10,19,1),
(28,10,12,5),
(28,10,6,2),
(28,10,4,3),
(28,10,35,2),
(28,10,47,2),
(28,53,37,1),
(28,53,13,2),
(28,53,34,2),
(28,53,52,3),
(28,53,19,3),
(28,53,12,3),
(28,53,6,3),
(28,53,4,5),
(28,53,35,4),
(28,53,47,4),
(28,45,37,4),
(28,45,13,4),
(28,45,34,1),
(28,45,52,2),
(28,45,19,2),
(28,45,12,2),
(28,45,6,5),
(28,45,4,4),
(28,45,35,5),
(28,45,47,1),
(29,50,26,1),
(29,50,48,4),
(29,50,32,4),
(29,50,45,2),
(29,50,25,1),
(29,50,49,2),
(29,50,38,1),
(29,50,36,3),
(29,50,14,1),
(29,50,22,4),
(29,52,26,1),
(29,52,48,4),
(29,52,32,5),
(29,52,45,4),
(29,52,25,4),
(29,52,49,2),
(29,52,38,1),
(29,52,36,5),
(29,52,14,1),
(29,52,22,1),
(29,37,26,3),
(29,37,48,1),
(29,37,32,4),
(29,37,45,1),
(29,37,25,1),
(29,37,49,2),
(29,37,38,5),
(29,37,36,1),
(29,37,14,3),
(29,37,22,3),
(30,8,48,5),
(30,8,25,5),
(30,8,32,3),
(30,8,22,2),
(30,8,37,1),
(30,8,3,4),
(30,8,36,1),
(30,8,52,5),
(30,8,13,2),
(30,8,21,1),
(30,50,48,4),
(30,50,25,1),
(30,50,32,2),
(30,50,22,5),
(30,50,37,3),
(30,50,3,2),
(30,50,36,1),
(30,50,52,4),
(30,50,13,3),
(30,50,21,5),
(30,27,48,5),
(30,27,25,5),
(30,27,32,4),
(30,27,22,4),
(30,27,37,3),
(30,27,3,1),
(30,27,36,3),
(30,27,52,4),
(30,27,13,2),
(30,27,21,3);
INSERT INTO `EpisodeJudge` (`Episode_ID`, `Cook_ID`) VALUES
(31,17),
(31,2),
(31,53),
(32,8),
(32,25),
(32,4),
(33,9),
(33,11),
(33,21),
(34,24),
(34,49),
(34,12),
(35,24),
(35,11),
(35,20),
(36,18),
(36,38),
(36,15),
(37,33),
(37,18),
(37,39),
(38,9),
(38,26),
(38,34),
(39,16),
(39,49),
(39,15),
(40,33),
(40,18),
(40,12);
INSERT INTO `EpisodeCookCuisineRecipe` (`Episode_ID`, `Cook_ID`, `Cuisine_ID`, `Recipe_ID`) VALUES
(31,29,17,37),
(31,42,15,15),
(31,21,1,41),
(31,3,4,47),
(31,55,16,36),
(31,22,19,19),
(31,35,7,27),
(31,37,20,40),
(31,52,14,14),
(31,6,18,38),
(32,20,8,8),
(32,10,17,37),
(32,29,1,49),
(32,18,6,6),
(32,36,9,9),
(32,6,10,30),
(32,54,20,20),
(32,43,2,50),
(32,1,4,47),
(32,26,3,3),
(33,55,16,16),
(33,32,2,2),
(33,18,12,12),
(33,22,19,39),
(33,10,13,13),
(33,36,9,9),
(33,3,11,31),
(33,34,5,45),
(33,17,20,20),
(33,38,14,34),
(34,28,1,41),
(34,38,3,43),
(34,11,2,2),
(34,17,17,17),
(34,48,8,28),
(34,20,10,30),
(34,40,15,15),
(34,5,7,27),
(34,33,6,26),
(34,51,16,36),
(35,25,3,23),
(35,42,19,19),
(35,4,13,13),
(35,10,17,37),
(35,6,10,10),
(35,21,4,44),
(35,49,7,27),
(35,37,11,11),
(35,8,8,8),
(35,44,16,36),
(36,40,15,35),
(36,6,13,33),
(36,55,20,20),
(36,31,10,10),
(36,41,6,26),
(36,14,4,24),
(36,49,7,27),
(36,12,8,28),
(36,27,3,3),
(36,28,18,18),
(37,52,1,21),
(37,45,9,9),
(37,38,4,47),
(37,41,5,25),
(37,2,6,26),
(37,32,2,22),
(37,51,16,36),
(37,12,14,34),
(37,28,13,13),
(37,19,19,19),
(38,42,14,34),
(38,39,12,48),
(38,55,5,5),
(38,19,19,19),
(38,24,18,18),
(38,35,6,26),
(38,20,10,1),
(38,8,20,40),
(38,3,11,31),
(38,6,7,27),
(39,24,3,43),
(39,1,1,41),
(39,21,4,4),
(39,4,7,27),
(39,55,16,16),
(39,53,19,39),
(39,14,11,11),
(39,56,20,40),
(39,47,14,34),
(39,36,5,7),
(40,2,6,6),
(40,24,18,38),
(40,20,8,8),
(40,48,20,20),
(40,43,2,42),
(40,3,12,12),
(40,7,9,9),
(40,10,10,1),
(40,38,3,3),
(40,5,7,27);
INSERT INTO `CookRatings` (`Episode_ID`, `Judge_Cook_ID`, `Episode_Cook_ID`, `Rating`) VALUES
(31,17,29,5),
(31,17,42,5),
(31,17,21,4),
(31,17,3,3),
(31,17,55,4),
(31,17,22,2),
(31,17,35,5),
(31,17,37,5),
(31,17,52,4),
(31,17,6,3),
(31,2,29,5),
(31,2,42,5),
(31,2,21,3),
(31,2,3,2),
(31,2,55,2),
(31,2,22,1),
(31,2,35,3),
(31,2,37,1),
(31,2,52,2),
(31,2,6,2),
(31,53,29,1),
(31,53,42,3),
(31,53,21,5),
(31,53,3,5),
(31,53,55,4),
(31,53,22,3),
(31,53,35,5),
(31,53,37,5),
(31,53,52,4),
(31,53,6,2),
(32,8,20,3),
(32,8,10,1),
(32,8,29,2),
(32,8,18,3),
(32,8,36,4),
(32,8,6,2),
(32,8,54,3),
(32,8,43,5),
(32,8,1,3),
(32,8,26,4),
(32,25,20,5),
(32,25,10,3),
(32,25,29,1),
(32,25,18,4),
(32,25,36,3),
(32,25,6,3),
(32,25,54,4),
(32,25,43,2),
(32,25,1,4),
(32,25,26,3),
(32,4,20,5),
(32,4,10,4),
(32,4,29,2),
(32,4,18,4),
(32,4,36,5),
(32,4,6,1),
(32,4,54,5),
(32,4,43,5),
(32,4,1,2),
(32,4,26,2),
(33,9,55,1),
(33,9,32,2),
(33,9,18,3),
(33,9,22,5),
(33,9,10,2),
(33,9,36,5),
(33,9,3,2),
(33,9,34,5),
(33,9,17,3),
(33,9,38,3),
(33,11,55,3),
(33,11,32,3),
(33,11,18,4),
(33,11,22,4),
(33,11,10,4),
(33,11,36,1),
(33,11,3,1),
(33,11,34,1),
(33,11,17,5),
(33,11,38,1),
(33,21,55,1),
(33,21,32,5),
(33,21,18,1),
(33,21,22,4),
(33,21,10,5),
(33,21,36,3),
(33,21,3,3),
(33,21,34,2),
(33,21,17,1),
(33,21,38,4),
(34,24,28,5),
(34,24,38,4),
(34,24,11,1),
(34,24,17,3),
(34,24,48,4),
(34,24,20,4),
(34,24,40,5),
(34,24,5,3),
(34,24,33,3),
(34,24,51,3),
(34,49,28,3),
(34,49,38,3),
(34,49,11,1),
(34,49,17,1),
(34,49,48,2),
(34,49,20,5),
(34,49,40,4),
(34,49,5,4),
(34,49,33,2),
(34,49,51,5),
(34,12,28,1),
(34,12,38,3),
(34,12,11,2),
(34,12,17,2),
(34,12,48,2),
(34,12,20,1),
(34,12,40,4),
(34,12,5,4),
(34,12,33,2),
(34,12,51,2),
(35,24,25,1),
(35,24,42,2),
(35,24,4,3),
(35,24,10,3),
(35,24,6,2),
(35,24,21,5),
(35,24,49,2),
(35,24,37,3),
(35,24,8,3),
(35,24,44,2),
(35,11,25,4),
(35,11,42,2),
(35,11,4,1),
(35,11,10,1),
(35,11,6,4),
(35,11,21,1),
(35,11,49,3),
(35,11,37,4),
(35,11,8,1),
(35,11,44,2),
(35,20,25,3),
(35,20,42,5),
(35,20,4,3),
(35,20,10,3),
(35,20,6,4),
(35,20,21,2),
(35,20,49,2),
(35,20,37,5),
(35,20,8,1),
(35,20,44,2),
(36,18,40,1),
(36,18,6,1),
(36,18,55,4),
(36,18,31,1),
(36,18,41,5),
(36,18,14,4),
(36,18,49,2),
(36,18,12,1),
(36,18,27,1),
(36,18,28,4),
(36,38,40,2),
(36,38,6,3),
(36,38,55,4),
(36,38,31,3),
(36,38,41,3),
(36,38,14,1),
(36,38,49,2),
(36,38,12,2),
(36,38,27,3),
(36,38,28,4),
(36,15,40,3),
(36,15,6,2),
(36,15,55,2),
(36,15,31,1),
(36,15,41,1),
(36,15,14,3),
(36,15,49,1),
(36,15,12,1),
(36,15,27,1),
(36,15,28,5),
(37,33,52,1),
(37,33,45,2),
(37,33,38,4),
(37,33,41,4),
(37,33,2,4),
(37,33,32,1),
(37,33,51,2),
(37,33,12,3),
(37,33,28,4),
(37,33,19,5),
(37,18,52,4),
(37,18,45,4),
(37,18,38,1),
(37,18,41,3),
(37,18,2,2),
(37,18,32,3),
(37,18,51,4),
(37,18,12,5),
(37,18,28,2),
(37,18,19,3),
(37,39,52,2),
(37,39,45,2),
(37,39,38,2),
(37,39,41,3),
(37,39,2,3),
(37,39,32,5),
(37,39,51,2),
(37,39,12,2),
(37,39,28,5),
(37,39,19,3),
(38,9,42,5),
(38,9,39,1),
(38,9,55,1),
(38,9,19,4),
(38,9,24,5),
(38,9,35,4),
(38,9,20,5),
(38,9,8,3),
(38,9,3,3),
(38,9,6,1),
(38,26,42,2),
(38,26,39,4),
(38,26,55,2),
(38,26,19,3),
(38,26,24,3),
(38,26,35,5),
(38,26,20,3),
(38,26,8,2),
(38,26,3,2),
(38,26,6,1),
(38,34,42,5),
(38,34,39,4),
(38,34,55,4),
(38,34,19,2),
(38,34,24,3),
(38,34,35,3),
(38,34,20,4),
(38,34,8,2),
(38,34,3,1),
(38,34,6,3),
(39,16,24,4),
(39,16,1,5),
(39,16,21,1),
(39,16,4,1),
(39,16,55,5),
(39,16,53,2),
(39,16,14,3),
(39,16,56,1),
(39,16,47,2),
(39,16,36,4),
(39,49,24,1),
(39,49,1,3),
(39,49,21,1),
(39,49,4,1),
(39,49,55,2),
(39,49,53,1),
(39,49,14,1),
(39,49,56,4),
(39,49,47,1),
(39,49,36,2),
(39,15,24,2),
(39,15,1,1),
(39,15,21,3),
(39,15,4,5),
(39,15,55,2),
(39,15,53,1),
(39,15,14,3),
(39,15,56,3),
(39,15,47,3),
(39,15,36,3),
(40,33,2,1),
(40,33,24,4),
(40,33,20,2),
(40,33,48,4),
(40,33,43,4),
(40,33,3,3),
(40,33,7,3),
(40,33,10,3),
(40,33,38,4),
(40,33,5,2),
(40,18,2,2),
(40,18,24,5),
(40,18,20,2),
(40,18,48,3),
(40,18,43,1),
(40,18,3,1),
(40,18,7,1),
(40,18,10,2),
(40,18,38,1),
(40,18,5,5),
(40,12,2,3),
(40,12,24,1),
(40,12,20,2),
(40,12,48,3),
(40,12,43,5),
(40,12,3,4),
(40,12,7,3),
(40,12,10,2),
(40,12,38,1),
(40,12,5,3);
INSERT INTO `EpisodeJudge` (`Episode_ID`, `Cook_ID`) VALUES
(41,18),
(41,36),
(41,44),
(42,40),
(42,48),
(42,5),
(43,32),
(43,31),
(43,55),
(44,16),
(44,33),
(44,18),
(45,50),
(45,37),
(45,7),
(46,8),
(46,17),
(46,51),
(47,40),
(47,29),
(47,31),
(48,16),
(48,18),
(48,30),
(49,16),
(49,1),
(49,56),
(50,33),
(50,19),
(50,31);
INSERT INTO `EpisodeCookCuisineRecipe` (`Episode_ID`, `Cook_ID`, `Cuisine_ID`, `Recipe_ID`) VALUES
(41,14,11,11),
(41,28,18,38),
(41,29,17,37),
(41,7,9,9),
(41,52,1,21),
(41,24,20,20),
(41,38,4,24),
(41,41,6,26),
(41,17,12,48),
(41,6,10,30),
(42,23,10,1),
(42,18,4,24),
(42,45,6,26),
(42,29,1,21),
(42,26,15,15),
(42,42,18,18),
(42,8,20,40),
(42,46,17,37),
(42,52,5,5),
(42,28,3,46),
(43,11,10,30),
(43,20,8,28),
(43,54,14,14),
(43,50,16,16),
(43,17,19,39),
(43,2,7,27),
(43,34,5,45),
(43,51,15,15),
(43,38,3,3),
(43,19,11,11),
(44,27,12,48),
(44,28,1,41),
(44,8,8,28),
(44,43,2,2),
(44,46,17,17),
(44,26,15,15),
(44,4,20,40),
(44,7,9,9),
(44,19,11,31),
(44,41,6,26),
(45,17,17,17),
(45,1,1,21),
(45,41,5,25),
(45,3,11,31),
(45,21,16,16),
(45,10,13,33),
(45,6,18,38),
(45,39,12,32),
(45,8,8,28),
(45,42,19,39),
(46,45,9,29),
(46,18,12,32),
(46,34,5,45),
(46,21,1,49),
(46,13,3,43),
(46,11,10,1),
(46,10,20,20),
(46,42,15,35),
(46,38,4,44),
(46,16,17,17),
(47,45,16,36),
(47,25,15,35),
(47,15,5,45),
(47,54,14,34),
(47,36,9,29),
(47,4,20,40),
(47,38,4,24),
(47,12,8,8),
(47,2,13,13),
(47,27,3,3),
(48,12,14,34),
(48,24,18,18),
(48,6,7,27),
(48,3,11,31),
(48,26,15,35),
(48,38,2,2),
(48,15,9,9),
(48,33,6,6),
(48,28,1,49),
(48,37,20,40),
(49,24,3,46),
(49,42,19,39),
(49,11,10,10),
(49,39,12,32),
(49,20,18,18),
(49,47,14,34),
(49,6,7,27),
(49,55,16,16),
(49,48,8,8),
(49,15,5,5),
(50,37,20,40),
(50,10,10,10),
(50,27,19,19),
(50,6,7,27),
(50,2,6,26),
(50,14,1,21),
(50,3,11,31),
(50,12,8,8),
(50,41,9,9),
(50,38,2,2);
INSERT INTO `CookRatings` (`Episode_ID`, `Judge_Cook_ID`, `Episode_Cook_ID`, `Rating`) VALUES
(41,18,14,4),
(41,18,28,5),
(41,18,29,4),
(41,18,7,3),
(41,18,52,3),
(41,18,24,2),
(41,18,38,3),
(41,18,41,3),
(41,18,17,5),
(41,18,6,5),
(41,36,14,3),
(41,36,28,3),
(41,36,29,2),
(41,36,7,1),
(41,36,52,4),
(41,36,24,2),
(41,36,38,5),
(41,36,41,3),
(41,36,17,4),
(41,36,6,1),
(41,44,14,3),
(41,44,28,2),
(41,44,29,4),
(41,44,7,4),
(41,44,52,4),
(41,44,24,5),
(41,44,38,1),
(41,44,41,1),
(41,44,17,2),
(41,44,6,1),
(42,40,23,1),
(42,40,18,2),
(42,40,45,4),
(42,40,29,5),
(42,40,26,2),
(42,40,42,2),
(42,40,8,2),
(42,40,46,3),
(42,40,52,1),
(42,40,28,4),
(42,48,23,4),
(42,48,18,2),
(42,48,45,5),
(42,48,29,3),
(42,48,26,2),
(42,48,42,3),
(42,48,8,3),
(42,48,46,1),
(42,48,52,3),
(42,48,28,1),
(42,5,23,1),
(42,5,18,1),
(42,5,45,4),
(42,5,29,5),
(42,5,26,5),
(42,5,42,5),
(42,5,8,5),
(42,5,46,3),
(42,5,52,5),
(42,5,28,5),
(43,32,11,2),
(43,32,20,2),
(43,32,54,4),
(43,32,50,3),
(43,32,17,1),
(43,32,2,2),
(43,32,34,1),
(43,32,51,5),
(43,32,38,5),
(43,32,19,4),
(43,31,11,2),
(43,31,20,1),
(43,31,54,2),
(43,31,50,1),
(43,31,17,2),
(43,31,2,4),
(43,31,34,5),
(43,31,51,5),
(43,31,38,1),
(43,31,19,5),
(43,55,11,5),
(43,55,20,3),
(43,55,54,4),
(43,55,50,2),
(43,55,17,4),
(43,55,2,1),
(43,55,34,5),
(43,55,51,5),
(43,55,38,4),
(43,55,19,2),
(44,16,27,4),
(44,16,28,5),
(44,16,8,2),
(44,16,43,1),
(44,16,46,2),
(44,16,26,1),
(44,16,4,5),
(44,16,7,4),
(44,16,19,2),
(44,16,41,3),
(44,33,27,2),
(44,33,28,2),
(44,33,8,1),
(44,33,43,1),
(44,33,46,2),
(44,33,26,3),
(44,33,4,1),
(44,33,7,2),
(44,33,19,5),
(44,33,41,1),
(44,18,27,3),
(44,18,28,5),
(44,18,8,4),
(44,18,43,5),
(44,18,46,1),
(44,18,26,5),
(44,18,4,2),
(44,18,7,5),
(44,18,19,4),
(44,18,41,4),
(45,50,17,4),
(45,50,1,2),
(45,50,41,4),
(45,50,3,3),
(45,50,21,1),
(45,50,10,4),
(45,50,6,3),
(45,50,39,5),
(45,50,8,3),
(45,50,42,4),
(45,37,17,4),
(45,37,1,4),
(45,37,41,1),
(45,37,3,1),
(45,37,21,5),
(45,37,10,5),
(45,37,6,4),
(45,37,39,3),
(45,37,8,1),
(45,37,42,1),
(45,7,17,5),
(45,7,1,5),
(45,7,41,5),
(45,7,3,5),
(45,7,21,2),
(45,7,10,2),
(45,7,6,3),
(45,7,39,1),
(45,7,8,3),
(45,7,42,4),
(46,8,45,5),
(46,8,18,2),
(46,8,34,5),
(46,8,21,4),
(46,8,13,1),
(46,8,11,1),
(46,8,10,5),
(46,8,42,5),
(46,8,38,4),
(46,8,16,2),
(46,17,45,3),
(46,17,18,1),
(46,17,34,3),
(46,17,21,1),
(46,17,13,3),
(46,17,11,5),
(46,17,10,5),
(46,17,42,4),
(46,17,38,5),
(46,17,16,4),
(46,51,45,3),
(46,51,18,1),
(46,51,34,1),
(46,51,21,4),
(46,51,13,4),
(46,51,11,2),
(46,51,10,5),
(46,51,42,1),
(46,51,38,5),
(46,51,16,2),
(47,40,45,2),
(47,40,25,3),
(47,40,15,4),
(47,40,54,2),
(47,40,36,5),
(47,40,4,3),
(47,40,38,3),
(47,40,12,3),
(47,40,2,2),
(47,40,27,4),
(47,29,45,2),
(47,29,25,5),
(47,29,15,3),
(47,29,54,1),
(47,29,36,3),
(47,29,4,2),
(47,29,38,3),
(47,29,12,2),
(47,29,2,5),
(47,29,27,4),
(47,31,45,5),
(47,31,25,5),
(47,31,15,4),
(47,31,54,5),
(47,31,36,5),
(47,31,4,2),
(47,31,38,2),
(47,31,12,2),
(47,31,2,1),
(47,31,27,4),
(48,16,12,4),
(48,16,24,5),
(48,16,6,3),
(48,16,3,2),
(48,16,26,1),
(48,16,38,4),
(48,16,15,2),
(48,16,33,1),
(48,16,28,4),
(48,16,37,3),
(48,18,12,1),
(48,18,24,4),
(48,18,6,3),
(48,18,3,3),
(48,18,26,2),
(48,18,38,4),
(48,18,15,2),
(48,18,33,5),
(48,18,28,1),
(48,18,37,1),
(48,30,12,5),
(48,30,24,1),
(48,30,6,5),
(48,30,3,1),
(48,30,26,4),
(48,30,38,2),
(48,30,15,2),
(48,30,33,3),
(48,30,28,2),
(48,30,37,1),
(49,16,24,1),
(49,16,42,2),
(49,16,11,2),
(49,16,39,4),
(49,16,20,2),
(49,16,47,4),
(49,16,6,4),
(49,16,55,2),
(49,16,48,2),
(49,16,15,4),
(49,1,24,3),
(49,1,42,2),
(49,1,11,4),
(49,1,39,3),
(49,1,20,1),
(49,1,47,5),
(49,1,6,4),
(49,1,55,4),
(49,1,48,5),
(49,1,15,4),
(49,56,24,3),
(49,56,42,2),
(49,56,11,4),
(49,56,39,2),
(49,56,20,3),
(49,56,47,1),
(49,56,6,2),
(49,56,55,1),
(49,56,48,5),
(49,56,15,4),
(50,33,37,4),
(50,33,10,1),
(50,33,27,1),
(50,33,6,2),
(50,33,2,1),
(50,33,14,2),
(50,33,3,2),
(50,33,12,4),
(50,33,41,5),
(50,33,38,3),
(50,19,37,1),
(50,19,10,3),
(50,19,27,5),
(50,19,6,4),
(50,19,2,3),
(50,19,14,3),
(50,19,3,2),
(50,19,12,2),
(50,19,41,1),
(50,19,38,3),
(50,31,37,3),
(50,31,10,5),
(50,31,27,4),
(50,31,6,2),
(50,31,2,3),
(50,31,14,1),
(50,31,3,4),
(50,31,12,5),
(50,31,41,5),
(50,31,38,1);

INSERT INTO SEASON (`Year`) VALUES (2024);
INSERT INTO Episode (`Episode_No`, `Season_ID`) VALUES (1, 6), (2, 6), (3, 6), (4, 6), (5, 6), (6, 6), (7, 6), (8, 6), (9, 6), (10, 6);

INSERT INTO `Cook` (`First_Name`, `Last_Name`, `Phone_Number`, `Date_of_Birth`, `Years_of_Experience`, `Cook_Level`, `Image_ID`) VALUES
('Anakreon', 'Anakreonidis', 5293567899, '1998-05-20', 7, 'B Cook', NULL),
('Arthuros', 'Sigmopoulos', 1393567899, '1999-05-20', 8, 'A Cook', NULL),
('Asteras', 'Tripolis', 5123567899, '1998-05-22', 3, 'C Cook', NULL),
('Prigkipas', 'Verikokos', 5297267899, '1998-05-20', 8, 'B Cook', NULL);

INSERT INTO Recipe_Cooks (`Recipe_ID`, `Cook_ID`) VALUES
(1, 58), (1, 57), (1, 59), (1, 60), (2, 60), (2, 59), (3, 59), (3, 60), (3, 58), (3, 57), (4, 60), (4, 59), (4, 58), (5, 59), (5, 57), (6, 59), (7, 58), (7, 60), (7, 57), (7, 59), (8, 58), (8, 60), (9, 57), (9, 60), (9, 59), (9, 58), (10, 60);

INSERT INTO CookSpecializesInCuisine (`Cook_ID`, `Cuisine_ID`) VALUE
(57, 14), (58, 9), (58, 3), (58, 6), (58, 19), (58, 20), (59, 7), (59, 17), (59, 10), (60, 11), (60, 5), (60, 4), (60, 15), (60, 7);


INSERT INTO `EpisodeJudge` (`Episode_ID`, `Cook_ID`) VALUES
(51, 30),
(51, 49),
(51, 9),
(52, 49),
(52, 53),
(52, 22),
(53, 22),
(53, 30),
(53, 35),
(54, 35),
(54, 9),
(54, 53),
(55, 49),
(55, 22),
(55, 30),
(56, 9),
(56, 35),
(56, 30),
(57, 49),
(57, 9),
(57, 53),
(58, 9),
(58, 53),
(58, 22),
(59, 49),
(59, 30),
(59, 35),
(60, 22),
(60, 49),
(60, 30);


INSERT INTO `EpisodeCookCuisineRecipe` (`Episode_ID`, `Cook_ID`, `Cuisine_ID`, `Recipe_ID`) VALUES
(51,14,11,11),
(51,28,18,38),
(51,29,17,37),
(51,7,9,9),
(51,52,1,21),
(51,24,20,20),
(51,38,4,24),
(51,41,6,26),
(51,17,12,48),
(51,6,10,30),
(52,23,10,1),
(52,18,4,24),
(52,45,6,26),
(52,29,1,21),
(52,26,15,15),
(52,42,18,18),
(52,8,20,40),
(52,46,17,37),
(52,52,5,5),
(52,28,3,46),
(53,11,10,30),
(53,20,8,28),
(53,54,14,14),
(53,50,16,16),
(53,17,19,39),
(53,2,7,27),
(53,34,5,45),
(53,51,15,15),
(53,38,3,3),
(53,19,11,11),
(54,27,12,48),
(54,28,1,41),
(54,8,8,28),
(54,43,2,2),
(54,46,17,17),
(54,26,15,15),
(54,4,20,40),
(54,7,9,9),
(54,19,11,31),
(54,41,6,26),
(55,17,17,17),
(55,1,1,21),
(55,41,5,25),
(55,3,11,31),
(55,21,16,16),
(55,10,13,33),
(55,6,18,38),
(55,39,12,32),
(55,8,8,28),
(55,42,19,39),
(56,45,9,29),
(56,18,12,32),
(56,34,5,45),
(56,21,1,49),
(56,13,3,43),
(56,11,10,1),
(56,10,20,20),
(56,42,15,35),
(56,38,4,44),
(56,16,17,17),
(57,45,16,36),
(57,25,15,35),
(57,15,5,45),
(57,54,14,34),
(57,36,9,29),
(57,4,20,40),
(57,38,4,24),
(57,12,8,8),
(57,2,13,13),
(57,27,3,3),
(58,12,14,34),
(58,24,18,18),
(58,6,7,27),
(58,3,11,31),
(58,26,15,35),
(58,38,2,2),
(58,15,9,9),
(58,33,6,6),
(58,28,1,49),
(58,37,20,40),
(59,24,3,46),
(59,42,19,39),
(59,11,10,10),
(59,39,12,32),
(59,20,18,18),
(59,47,14,34),
(59,6,7,27),
(59,55,16,16),
(59,48,8,8),
(59,15,5,5),
(60,37,20,40),
(60,10,10,10),
(60,27,19,19),
(60,6,7,27),
(60,2,6,26),
(60,14,1,21),
(60,3,11,31),
(60,12,8,8),
(60,41,9,9),
(60,38,2,2);



-- ######################### RecipeTables ############################

-- RECIPE 
CREATE INDEX idx_recipe_base_ingredient ON Recipe(Base_Ingredient_ID);
CREATE INDEX idx_recipe_cuisine ON Recipe(Cuisine_ID);
CREATE INDEX idx_recipe_image ON Recipe(Image_ID);

-- INGREDIENT
CREATE INDEX idx_ingredient_food_type ON Ingredient(Food_Type_ID);

-- RECIPEINGREDIENT
CREATE INDEX idx_recipe_ingredient ON RecipeIngredient(Recipe_ID, Ingredient_ID); -- Composite Index

-- EPISODECOOKCUISINERECIPE
CREATE INDEX idx_eccr_episode ON EpisodeCookCuisineRecipe(Episode_ID);
CREATE INDEX idx_eccr_cook ON EpisodeCookCuisineRecipe(Cook_ID);
CREATE INDEX idx_eccr_cuisine ON EpisodeCookCuisineRecipe(Cuisine_ID);
CREATE INDEX idx_eccr_recipe ON EpisodeCookCuisineRecipe(Recipe_ID);

-- EPISODEJUDGE
CREATE INDEX idx_episode_judge ON EpisodeJudge(Episode_ID, Cook_ID);

-- FOR IMAGE RETRIEVAL
CREATE INDEX idx_equipment_image ON Equipment(Image_ID);
CREATE INDEX idx_food_type_image ON Food_Type(Image_ID);





-- ######################### CookTables ############################

CREATE INDEX idx_episodecookcuisinerecipe_episodeid ON EpisodeCookCuisineRecipe(Episode_ID);
CREATE INDEX idx_episodecookcuisinerecipe_cookid ON EpisodeCookCuisineRecipe(Cook_ID);
CREATE INDEX idx_episodecookcuisinerecipe_cuisineid ON EpisodeCookCuisineRecipe(Cuisine_ID);
CREATE INDEX idx_episodecookcuisinerecipe_recipeid ON EpisodeCookCuisineRecipe(Recipe_ID);

CREATE INDEX idx_episodejudge_episodeid ON EpisodeJudge(Episode_ID);
CREATE INDEX idx_episodejudge_cookid ON EpisodeJudge(Cook_ID);

CREATE INDEX idx_cookspecializesincuisine_cookid_cuisineid ON CookSpecializesInCuisine(Cook_ID, Cuisine_ID);

CREATE INDEX idx_cook_yearsofexperience ON Cook(Years_of_Experience);
CREATE INDEX idx_cook_cooklevel ON Cook(Cook_Level);

CREATE INDEX idx_recipe_baseingredientid ON Recipe(Base_Ingredient_ID);
CREATE INDEX idx_recipe_cuisineid ON Recipe(Cuisine_ID);

CREATE INDEX idx_recipeingredient_recipeid ON RecipeIngredient(Recipe_ID);
CREATE INDEX idx_recipeingredient_ingredientid ON RecipeIngredient(Ingredient_ID);

CREATE INDEX idx_reciperequiresequipment_recipeid ON RecipeRequiresEquipment(Recipe_ID);
CREATE INDEX idx_reciperequiresequipment_equipmentid ON RecipeRequiresEquipment(Equipment_ID);

DELIMITER $$

CREATE PROCEDURE `FindEpisodeWinner`(IN episode_id INT)
BEGIN
    DROP TEMPORARY TABLE IF EXISTS TempScores;
    CREATE TEMPORARY TABLE TempScores (
        Cook_ID INT,
        TotalScore INT,
        CookLevel INT,
        PRIMARY KEY (Cook_ID)
    );

    INSERT INTO TempScores (Cook_ID, TotalScore)
    SELECT 
        cr.Episode_Cook_ID,
        SUM(cr.Rating) AS TotalScore
    FROM 
        CookRatings cr
    WHERE 
        cr.Episode_ID = episode_id
    GROUP BY 
        cr.Episode_Cook_ID;

    UPDATE 
        TempScores ts
    JOIN 
        CookLevelMapping clm ON ts.Cook_ID = clm.Cook_ID
    SET 
        ts.CookLevel = clm.Level_Number;

    SELECT 
        c.Cook_ID, 
        c.First_Name, 
        c.Last_Name,
        ts.TotalScore,
        ts.CookLevel
    FROM 
        TempScores ts
    JOIN 
        Cook c ON ts.Cook_ID = c.Cook_ID
    WHERE 
        ts.TotalScore = (SELECT MAX(TotalScore) FROM TempScores)
        AND ts.CookLevel = (SELECT MAX(CookLevel) FROM TempScores WHERE TotalScore = (SELECT MAX(TotalScore) FROM TempScores))
    ORDER BY 
        RAND()
    LIMIT 1;

    DROP TEMPORARY TABLE IF EXISTS TempScores;

END$$

DELIMITER ;

